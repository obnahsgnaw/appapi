syntax = "proto3";
package app_backend_api.app.v1;
option go_package = "app_backend_api/app/v1";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "app_backend_api/common/v1/obj.proto";
import "app_backend_api/app/v1/entity.proto";
import "validate/validate.proto";
import "google/protobuf/empty.proto";

// 应用编辑服务
service AppEditService{
  // 服务swagger描述定义
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "2.应用编辑服务";
  };
  // 创建
  rpc Create (AppCreateRequest) returns (App) {
    option (google.api.http) = {
      post: "/v1/applications";
      body: "data";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "创建";
      security:{
        security_requirement:{
          key:"AppId"
        }
        security_requirement:{
          key:"BearerToken"
        }
      }
      extensions:{
        key: "x-order";
        value: {
          number_value: 1
        }
      }
    };
  }
  // 修改
  rpc Update (AppUpdateRequest) returns (App) {
    option (google.api.http) = {
      put: "/v1/applications/{id}"
      body: "data"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "修改";
      security:{
        security_requirement:{
          key:"AppId"
        }
        security_requirement:{
          key:"BearerToken"
        }
      }
      extensions:{
        key: "x-order";
        value: {
          number_value: 2
        }
      }
    };
  }
  // 删除
  rpc Delete (AppDeleteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/applications/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "删除";
      security:{
        security_requirement:{
          key:"AppId"
        }
        security_requirement:{
          key:"BearerToken"
        }
      }
      extensions:{
        key: "x-order";
        value: {
          number_value: 3
        }
      }
    };
  }
}

message AppCreateRequest {
  AppCreateForm data = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required:["data"]
      description:"data";
    },
    (validate.rules).message = {required: true}];
}
message AppCreateForm {
  string name = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'应用名称'
    },
    (validate.rules).string = {ignore_empty:false, min_len:1,max_len:100}
  ];
  string description = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'应用描述'
    },
    (validate.rules).string = {ignore_empty:false, min_len:0,max_len:255}
  ];
  repeated string scopes = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'作用范围'
    },
    (validate.rules).repeated = {ignore_empty:true, unique:true, items:{string:{min_len:1,max_len:100}}}
  ];
  AppType type = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'类型'
    },
    (validate.rules).enum = {defined_only:true}
  ];
  string package = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'包名'
    },
    (validate.rules).string = {ignore_empty:false, min_len:1,max_len:100}
  ];
  string project = 6[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'项目标识'
    },
    (validate.rules).string = {ignore_empty:false, min_len:1,max_len:100}
  ];
  bool manage = 7[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'是否管理型应用'
    }
  ];
  map<string,string> attrs = 8[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'应用属性'
    }
  ];
}
message AppUpdateRequest {
  string id = 1[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    required:['id']
    description:'app.id'
  },
    (validate.rules).string = {ignore_empty: false, len:24}
  ];
  AppUpdateForm data = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required:["data"]
      description:'data'
    },
    (validate.rules).message = {required :true}
  ];
}
message AppUpdateForm {
  string name = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'应用名称'
    },
    (validate.rules).string = {ignore_empty:true, min_len:1,max_len:100}
  ];
  string description = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'应用描述'
    },
    (validate.rules).string = {ignore_empty:true, min_len:0,max_len:255}
  ];
  repeated string scopes = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'作用范围'
    },
    (validate.rules).repeated = {ignore_empty:true, unique:true, items:{string:{min_len:1,max_len:100}}}
  ];
  AppType type = 4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'类型'
    },
    (validate.rules).enum = {defined_only:true}
  ];
  string package = 5[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'包名'
    },
    (validate.rules).string = {ignore_empty:true, min_len:1,max_len:100}
  ];
  string project = 6[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'项目标识'
    },
    (validate.rules).string = {ignore_empty:true, min_len:1,max_len:100}
  ];
  bool manage = 7[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'是否管理型应用'
    }
  ];
  map<string,string> attrs = 8[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description:'应用属性'
    }
  ];
  common.v1.Conflict conflict = 9[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required:["conflict"]
      description:'检测冲突'
    },
    (validate.rules).message = {required :true}
  ];
}
message AppDeleteRequest {
  string id = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required: ["id"];
      title: "ID";
      description: "ID";
    },
    (validate.rules).string = {ignore_empty: false, len: 24}
  ];
}
