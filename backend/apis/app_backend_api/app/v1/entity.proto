syntax = "proto3";
package app_backend_api.app.v1;
option go_package = "app_backend_api/app/v1";
import "protoc-gen-openapiv2/options/annotations.proto";
import "app_backend_api/common/v1/obj.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

// 类型
enum AppType{
  Backend = 0;
  Frontend = 1;
}
// 简单属性对象
message SimpleApp{
  option (validate.ignored) = true;
  uint32 id = 1;
  string app_id = 2;
  string name = 3;
}
// 应用全属性对象
message App {
  option (validate.ignored) = true;
  uint32 id = 1[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'id'
  }];
  string app_id = 2[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'app id'
  }];
  string name = 3[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'应用名称'
  }];
  AppType type = 4[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'类型'
  }];
  string description = 5[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'应用描述'
  }];
  repeated string scopes = 6[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'作用范围'
  }];
  string package = 7[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'包名'
  }];
  string project = 8[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'项目标识'
  }];
  bool manage = 9[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'是否管理型应用'
  }];
  common.v1.EnableState enabled = 10[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:"启用状态";
  }];
  map<string, string> attrs = 11[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'应用属性'
  }];
  common.v1.OperateInfo operate_info = 12[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:"时间";
  }];
  common.v1.Conflict conflict = 13[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:"冲突检测";
  }];
}
// 应用分页对象
message PaginateApp {
  option (validate.ignored) = true;
  string id = 1[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'应用 id'
  }];
  string name = 2[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'应用名称'
  }];
  AppType type = 3[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'类型'
  }];
  bool manage = 4[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:'是否管理型应用'
  }];
  common.v1.EnableState enabled = 5[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:"启用状态";
  }];
  google.protobuf.Timestamp created_at = 6[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:"创建时间";
  }];
}
