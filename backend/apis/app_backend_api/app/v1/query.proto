syntax = "proto3";
package app_backend_api.app.v1;
option go_package = "app_backend_api/app/v1";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "app_backend_api/common/v1/obj.proto";
import "app_backend_api/app/v1/entity.proto";
import "validate/validate.proto";

// 应用查询服务
service AppQueryService{
  // 服务swagger描述定义
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "1.应用查询服务";
  };
  // 列表
  rpc Paginate (common.v1.PaginateRequest) returns (PaginateResponse) {
    option (google.api.http) = {
      get: "/v1/applications"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "列表";
      security:{
        security_requirement:{
          key:"AppId"
        }
        security_requirement:{
          key:"BearerToken"
        }
      }
      extensions:{
        key: "x-order";
        value: {
          number_value: 1
        }
      }
    };
  }
  // 单ID详情
  rpc Detail (DetailRequest) returns (App) {
    option (google.api.http) = {
      get: "/v1/applications/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "详情";
      security:{
        security_requirement:{
          key:"AppId"
        }
        security_requirement:{
          key:"BearerToken"
        }
      }
      extensions:{
        key: "x-order";
        value: {
          number_value: 2
        }
      }
    };
  }
  // 单ID详情
  rpc Simple (SimpleRequest) returns (SimpleApp);
  // 单ID详情
  rpc IdDetail (IdRequest) returns (App);
  // 单ID详情
  rpc IdSimple (IdRequest) returns (SimpleApp);
  // 多ID详情
  rpc IdsDetail (IdsRequest) returns (IdsResponse);
  // 多ID简单详情
  rpc IdsSimple (IdsRequest) returns (IdsSimpleResponse);
  // 验证后的详情
  rpc ValidApp(ValidAppRequest)returns(ValidAppResponse);
  // 属性配置
  rpc Config(ConfigRequest) returns(ConfigResponse){
    option (google.api.http) = {
      get: "/v1/attr-configs"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "属性配置";
      security:{
        security_requirement:{
          key:"AppId"
        }
        security_requirement:{
          key:"BearerToken"
        }
      }
      extensions:{
        key: "x-order";
        value: {
          number_value: 3
        }
      }
    };
  }
}

message PaginateResponse{
  option (validate.ignored) = true;
  common.v1.PaginateMeta meta = 1;
  repeated PaginateApp list = 2;
}
message DetailRequest {
  string id = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required: ["id"];
      description: "ID";
    },
    (validate.rules).string = {ignore_empty: false, len: 24}
  ];
}
message SimpleRequest {
  string id = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required: ["id"];
      description: "ID";
    },
    (validate.rules).string = {ignore_empty: false, len: 24}
  ];
  bool with_deleted = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required: ["with_deleted"];
      description: "是否包含删除数据";
    }
  ];
}
message IdRequest {
  uint32 id = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required: ["id"];
      description: "ID";
    },
    (validate.rules).uint32 = {ignore_empty: false, gt: 0}
  ];
  bool with_deleted = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required: ["with_deleted"];
      description: "是否包含删除数据";
    }
  ];
  bool with_attr = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required: ["with_attr"];
      description: "是否包含属性数据";
    }
  ];
}
message IdsRequest {
  repeated uint32 ids = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required: ["id"];
      description: "ID";
    },
    (validate.rules).repeated = {ignore_empty: false}
  ];
  bool with_deleted = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required: ["with_deleted"];
      description: "是否包含删除数据";
    }
  ];
  bool with_attr = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required: ["with_attr"];
      description: "是否包含属性数据";
    }
  ];
}
message IdsResponse{
  option (validate.ignored) = true;
  map<uint32,App> data = 1[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:"data"
  }];
}
message IdsSimpleResponse{
  option (validate.ignored) = true;
  map<uint32,SimpleApp> data = 1[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:"data"
  }];
}
message ValidAppRequest{
  string id = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required: ["id"];
      description: "ID";
    },
    (validate.rules).string = {ignore_empty: false, len: 24}
  ];
  string project = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required: ["project"];
      description: "project";
    },
    (validate.rules).string = {ignore_empty: false}
  ];
}
message ValidAppResponse{
  string error = 1[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:"invalid信息"
  }];
  App app = 2[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:"app"
  }];
}
message ConfigRequest {
}
message ConfigResponse{
  option (validate.ignored) = true;
  repeated ConfigItem items = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required:['items']
      description:'属性'
    }
  ];
}
message ConfigItem{
  option (validate.ignored) = true;
  string key = 1[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required:['key']
      description:'属性key'
    },
    (validate.rules).string = {ignore_empty: false}
  ];
  string title = 2[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required:['title']
      description:'属性标题'
    },
    (validate.rules).string = {ignore_empty: false}
  ];
  string desc = 3[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      required:['desc']
      description:'属性描述'
    },
    (validate.rules).string = {ignore_empty: false}
  ];
}
