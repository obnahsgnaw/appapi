// Code generated for package asset by go-bindata DO NOT EDIT. (@generated)
// sources:
// doc/backend.swagger.json
// doc/frontend.swagger.json
// doc/tcp.html
// doc/wss.html
package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _docBackendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5b\x6b\xdc\x46\x14\x7e\xf7\xaf\x38\xa8\x79\xb4\xe3\x4b\xdc\xd2\xf8\xa9\x9b\xba\x0f\xa6\x05\x87\xdc\x28\x04\x37\x8c\xa5\xb3\xbb\x93\x48\x33\xca\xcc\xc8\xb1\x1b\x0c\x31\xa5\xa5\x09\x98\x04\xe2\x96\xb6\x09\x05\x43\x68\x43\x29\x71\x1e\x4a\xef\x69\xfe\x4c\x76\xd7\xfe\x17\x65\x66\xa5\xd5\x65\x25\xed\xb5\x34\xa5\x7a\x4a\xac\x39\x73\xce\x77\x2e\x9a\xf3\xed\x19\xdd\x9e\x01\xb0\xe4\x2d\xd2\x68\xa0\xb0\x56\xc0\x5a\x3a\xbd\x60\xcd\xea\x67\x94\xd5\xb9\xb5\x02\x7a\x1d\xc0\x52\x54\xb9\xa8\xd7\xcf\x11\xfb\x06\x32\x07\x6a\xe7\xd7\x8c\x1c\x80\xe5\xa0\xb4\x05\xf5\x15\xe5\x4c\x4b\x5c\x6a\x22\x10\xdf\x77\xa9\x4d\xf4\x23\xd8\x0c\x77\x10\x9f\x46\x3b\xb6\x50\xc8\x50\x7a\x31\xb4\x07\x60\xd9\x9c\x29\x62\xab\x9e\x51\x00\x8b\x11\xcf\x58\xc5\xba\xbb\x13\x8a\x01\x58\x81\x70\xf5\xc3\xa6\x52\xbe\x5c\x99\x9f\xd7\x8b\x73\x36\x2a\xfb\xb4\xcd\xbd\x58\x0a\x3d\x42\x8d\x1c\xe3\x0c\xdf\xc1\x6d\xe2\xf9\x2e\x1a\x11\x23\xb1\x3b\x03\xb0\x6b\x3c\x55\xa4\x21\xad\x15\xb8\x6a\x1e\xf7\x99\x5e\x63\x0e\x6e\x5f\x44\xb1\x45\x6d\x8c\x95\x67\x7c\x3e\xf9\xe3\xab\xe3\x67\x4f\x42\xc5\xb3\xf9\x8a\xd6\x8d\xb4\x1c\xa8\xea\xce\xdd\x93\xc3\xdf\x3a\xcf\x0e\x3b\x0f\x3e\x2b\x57\x58\x0b\x54\x13\x9d\x9a\xef\x47\x2a\x4b\xa5\xdf\xe5\xac\x4e\x1b\x83\xac\xb7\xee\x3d\x6d\xdf\xd9\x3b\xf9\x74\xbf\xf3\xe2\x59\x1c\xa7\x0d\x13\x27\x69\x37\xd1\xc3\x38\x54\x26\x01\x51\xf2\x4c\x32\xac\x9e\xac\xcd\x99\x0c\x52\xc2\x89\x92\x98\xbf\x2e\x39\x8b\x36\x26\x9f\x73\x5b\xa1\x9a\x93\x4a\x20\xf1\x62\x5d\xbe\xe0\x4e\x60\x4f\x49\x17\x51\x4d\x19\x97\xf5\xfc\xd6\xe2\xbc\x6d\x02\x93\xac\xba\x06\x26\x8b\x50\x7b\x1e\x78\x1e\x11\x3b\x26\x3d\x26\x34\xaf\x5e\x1e\xb6\xf7\x8e\x7a\x51\xec\x8f\xe3\xf1\xcb\x83\xd6\xa3\x6f\xdb\x8f\xf7\x5b\xf7\x0e\x5b\x2f\x1e\xb6\xee\xee\x17\x6d\xe4\x3e\x0a\x83\x78\xcd\xe9\x4b\xd3\xb5\x55\x54\xba\x88\x13\xe2\x02\xa5\xcf\x99\x44\x99\x42\x08\x60\x2d\x2d\x2c\x64\x1e\xf5\xa3\xaa\x81\x0c\x6c\x1b\xa5\xac\x07\x2e\x44\x9a\x4e\x27\xd4\x77\xbd\xd5\x79\x26\x7d\xca\x00\xac\x53\x02\xeb\x5a\xcf\x1b\xf3\x0e\xd6\x29\xa3\xa6\xa0\xe7\xb7\x16\xbb\xa0\xad\x94\xf8\x6e\xe2\xaf\xdd\xd9\x34\xd2\xc5\x81\x48\x2f\xa0\x0a\x04\x43\x07\x6e\x35\x91\x81\x6a\xa2\x86\xcb\x03\x61\x23\xd8\x02\x89\x42\x27\x72\xa5\x04\x7e\x19\x84\xe5\x49\x20\x38\xe8\xe2\xa4\x10\x96\x87\xc8\x57\x1e\x84\x9b\x01\x4a\x05\x0e\x51\x04\xb6\x88\x4b\x1d\xa2\x10\xea\x84\xba\xe8\x4c\x21\x91\xef\x09\xc1\x85\x5c\xdf\xbc\x8e\xb6\x1a\x36\x9d\xcb\x63\xa5\x33\x90\x28\xc0\xe1\x28\x81\x71\x05\x44\x1f\x65\x4c\x85\xef\xee\x98\xf1\x3c\x33\x31\x8c\x26\xd9\x42\xf0\x51\x78\x54\xea\xfe\x04\x8a\x03\x31\x19\x4e\xa5\x7f\x4c\x78\x13\x55\x9c\x46\x57\xe7\x01\x2b\x4b\x72\x99\xf1\xb3\x23\x1a\x8f\xea\x2c\xf0\x4d\x81\xe9\x33\xd2\xa5\xb6\x1a\xcf\xfa\xd2\xa8\x99\xe9\xb9\xed\x72\xfb\x46\x69\x61\x97\x59\x1d\xd7\x67\xc5\x39\x78\x84\xed\x00\x65\x40\x20\x60\x54\x81\xa2\xde\x78\x69\x7f\x73\x88\xb7\x5c\x1f\xf6\x28\x00\xf5\xbb\x37\x96\x11\x07\xeb\x24\x70\xd5\x40\x43\x97\x19\x6e\xfb\x68\xab\x81\xa6\xa6\x7c\x5c\xcc\xe4\xc0\x4e\xb3\xae\xf0\x59\x9a\xa3\xf4\x56\x36\x12\xdb\x24\xda\x81\xa0\x6a\x27\xb3\x35\xe3\x78\xcd\xf7\x4d\x3b\xbd\xba\x91\xf1\xf1\x1c\x12\x81\xe2\x12\xbf\x81\xcc\x2c\xe7\xc2\x8c\x9e\xf6\xe0\x5a\x7e\x50\xcc\x08\xda\x8f\x7e\x6a\x7f\xf9\x3c\xa4\x4c\xc5\x8c\xa0\x2b\x36\x31\x23\xb8\x6c\x5e\xc8\x8a\x11\x54\x8c\xa0\x62\x04\x15\x23\xa8\x18\xc1\x48\x56\x2b\x46\xf0\x3a\x33\x02\x9f\x08\xe2\xa1\x42\x91\xe5\x05\x19\x1f\xa2\x89\x86\x83\x9b\x41\x23\x0b\x39\xfb\x3b\xfc\xf9\x27\xc7\x47\x5f\xb4\x9f\x1e\xb6\xfe\xbc\x9f\x15\xa5\x46\xe2\x66\x80\x62\x27\xbb\xa4\x13\x4f\x05\xea\xfe\x5b\x27\xae\xc4\xcc\xb2\xda\xf1\x0d\x82\x4d\xce\x5d\x24\xcc\xca\x67\x11\xff\x31\xb2\x63\xfe\x0d\xf3\x61\x06\x23\xbc\x3b\xb0\x1a\x7a\x32\x62\x06\x57\x25\x44\x26\x3d\x00\xbb\xd6\xfd\xf3\x03\x2a\xd5\x6b\xcf\x66\x62\xa8\x17\x42\xa5\x15\xb3\x19\x05\x42\xc5\x6c\x2a\x66\x53\x31\x9b\x8a\xd9\xfc\x5f\x99\x4d\x5e\xfb\xcf\x5c\x07\x4d\xa5\xff\x0f\xe4\x21\xdb\x73\x5c\x38\xe6\xa2\x6f\xb1\xb0\xed\xc7\x97\x73\x43\xb5\xfd\xce\xdd\xcf\xdb\x8f\x7f\x6c\xdd\xff\x65\xa4\xdb\x90\xdc\x5d\x19\xbe\x90\xbc\x79\xbb\x76\x25\x44\xf5\xba\x53\x85\x10\x67\xc5\x13\x2a\x9e\x50\xf1\x84\x8a\x27\x14\x5a\xaf\x78\x42\xc5\x13\xb2\xb0\x73\x79\x42\xea\xfb\x93\x7f\x90\x25\xa4\xf9\x40\xef\xe3\x98\x84\x73\xf1\x67\x13\x5b\x8b\xbd\x6f\x4f\x92\x34\x21\x1a\x8b\xf0\xae\xf3\xf1\xed\x89\xd0\x9d\x5d\xd1\x4c\xa7\xb6\xa8\x93\xed\xdc\x91\x06\xca\x14\x36\x50\xa4\xb2\x61\xd5\xb9\xf0\x88\x0a\x97\xdf\x5a\xb6\x72\x43\x48\x42\x37\x73\xd5\x4a\x25\x28\x6b\xe4\x6f\x0c\xa7\x4a\x23\xef\x0b\x3f\x6f\x2a\xda\xda\x37\x22\x4a\xee\xf5\x08\x23\x8d\x42\xab\xa5\x5b\xa5\xcd\xfd\xc2\x9d\x44\x08\x92\x9e\x69\x59\x54\xa1\x97\x25\x4a\x25\x1e\x16\x55\x28\x51\x4a\xf4\xf1\xad\x82\xbc\x77\x37\x38\x8e\xa9\x1e\xe2\x9e\xcf\xaf\x82\xe1\x61\xe4\x32\xd6\xde\x55\xd3\x04\x75\xd8\x1d\x24\x0e\xc8\x42\xe6\x74\x29\x9e\x32\xf6\x03\xee\x01\xe8\x7d\x45\x77\x69\x7d\x75\x1d\xde\x06\xbb\x49\x58\x03\x41\xf7\x54\xf0\x05\xd7\x68\xa1\xfb\x39\x12\x10\xe6\xe8\xff\x2a\xc1\x5d\x17\x85\x95\xf1\xd9\x1c\x32\xe1\x19\x33\x81\xe3\x36\x77\x0a\x6b\x68\xa8\x57\xb0\x2c\x28\x11\x05\xee\x9e\xac\x60\x6c\xa5\xe4\x7d\xa2\x14\x0a\x23\xfb\xd1\xd5\x85\xb9\xb3\x1b\xb7\x17\x67\x77\x4f\x15\xbc\x29\x28\x65\xc9\xab\x12\xd6\xcd\x08\x70\x22\x85\xc3\x64\xeb\xe4\xe0\xeb\xe3\xa3\xa3\xdc\x1c\xc8\x2a\x09\x53\x4d\x42\xc2\x9a\x11\x29\x3c\x6b\x46\x3f\xe2\x72\x4e\xa7\x41\x6d\xbc\xbf\x8b\x67\x49\x46\x89\x77\x32\x8d\x2e\x53\x4d\x27\x0f\xff\x1a\xa1\xf6\xa0\xf5\xe4\x9b\x57\xbf\xfe\x90\x5f\x88\x6b\x4c\xad\x47\x18\xfe\x95\x5e\x7c\x66\xa9\x34\xe9\x6b\xab\x63\x77\xdc\x32\xb5\xad\x07\xfb\x9d\xef\x9f\x0f\x15\x44\xea\x80\x36\x06\xad\x87\xfb\xad\xdf\x0f\xb2\xf1\xcb\x99\xee\x4f\x10\x48\x64\x64\xd3\xc5\x8b\x8a\xa8\x29\xb6\xe7\xd1\x6a\x37\x2e\x88\x61\x2b\xb7\xf5\xe0\xa8\xf3\xdd\x5e\xe7\xe0\x69\xe7\xde\xcf\xed\x3b\x7b\x39\x41\xcd\xc4\xec\x8a\xfe\x99\x5d\xf3\xfd\xa9\x44\x4c\xbf\x2d\xe3\x50\x2f\x92\xa2\x9f\xa5\x21\x89\xf9\xea\x60\xd7\x32\x13\x9c\x09\x3c\xeb\x1f\xa5\xe5\xf9\x56\x96\x98\x78\x4e\x56\x84\xbb\xc7\xd4\xa3\x9f\x01\xab\x79\x8c\xbd\x96\xa1\xc5\x71\x2d\xfa\xf4\x7d\x4c\x7c\x5b\x1f\x5d\xae\x7e\x38\x57\xf3\xfd\xb9\x35\x27\x5e\xe9\x5e\x97\x36\x91\x38\x59\x3e\x92\xbe\x67\x1c\xda\x84\xce\x09\x17\xf4\x63\x33\xdf\x28\xb5\xa3\x7d\x9c\xd9\x9d\xf9\x3b\x00\x00\xff\xff\xdd\xd2\xe1\x7e\xac\x30\x00\x00")

func docBackendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docBackendSwaggerJson,
		"doc/backend.swagger.json",
	)
}

func docBackendSwaggerJson() (*asset, error) {
	bytes, err := docBackendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/backend.swagger.json", size: 12460, mode: os.FileMode(420), modTime: time.Unix(1695088798, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docFrontendSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5b\x8b\x1c\x45\x14\x7e\xdf\x5f\x71\x68\xf3\xb8\x93\xd9\xd9\xac\x42\xf6\xc9\x91\x28\x0c\x0a\x09\x49\x0c\x42\x58\x43\x6d\xf5\x99\x99\x4a\xba\xab\xca\xaa\xea\xc9\x8e\x61\x20\x79\x11\x13\x58\x0c\x64\x1f\xbc\x04\x21\x10\x54\x44\x12\x9f\xbc\xa2\xfe\x19\x27\xb3\xfb\x2f\xa4\x6b\xfa\x3e\x3d\x3d\x57\xd1\x87\x79\xdc\xea\x73\xf9\xce\xa5\xea\x7c\x7b\xe6\xde\x16\x80\xa3\xef\x92\x4e\x07\x95\xb3\x0f\xce\xee\xf9\x1d\x67\x3b\x3c\x63\xbc\x2d\x9c\x7d\x08\xbf\x03\x38\x86\x19\x0f\xc3\xef\xef\x28\xc1\x0d\x72\x17\x9a\x57\x5a\x56\x10\xc0\x71\x51\x53\xc5\xa4\x61\x82\x87\x22\xd7\xbb\x08\x44\x4a\x8f\x51\x12\x1e\x41\x3b\x56\x21\x92\xc5\x2a\x3d\x54\x3a\x12\x6f\x44\x1e\x01\x1c\x2a\xb8\x21\xd4\x24\x6e\x01\x1c\x4e\x7c\xeb\x17\xdb\x5e\x3f\x12\x03\x70\x02\xe5\x85\x87\x5d\x63\xa4\xde\xaf\xd7\xc3\x8f\x35\x8a\x86\x9e\xa7\xc2\x4f\xa5\xd0\x27\xcc\xca\x71\xc1\xf1\x4d\x3c\x22\xbe\xf4\xd0\x8a\x58\x89\xc1\x16\xc0\xc0\xc6\x6a\x48\x47\x3b\xfb\x70\xd3\x1e\x4f\xb8\x6e\x71\x17\x8f\xae\xa1\xea\x31\x8a\xa9\xf1\x42\xd0\x67\xbf\x7f\x7e\xfa\xe2\x79\x64\x78\xbb\xdc\xd0\x65\x2b\xad\x67\x9a\xba\xff\xf0\xec\xd9\xaf\xa3\x17\xcf\x46\x8f\x3f\xa9\x36\xd8\x0c\x4c\x17\xdd\xa6\x94\xb1\xc9\x24\xae\x03\x1b\x97\xa6\x5d\xf4\x31\x0d\xcd\x26\x2c\x4e\xb6\x4d\x9e\x93\xc8\x52\xc1\x75\x90\x13\xce\xd4\xb0\x7e\x5b\x0b\x1e\x2b\x66\xcf\x05\x35\x68\x6a\xda\x28\x24\x7e\x6a\x4b\x2a\xe1\x06\x74\x4d\xb6\x88\xe9\xea\xb4\x11\xeb\xbd\x46\x5d\x8c\xf3\x98\x6d\x93\x0e\x66\xbb\x26\x0c\x3d\xf0\x7d\xa2\xfa\x69\x3e\x93\x74\x03\x38\x42\xa2\xb2\x3e\x5b\xee\x64\x5d\x6e\x8d\xff\x7c\x8f\x69\x93\xd5\x51\xa8\xa5\xe0\x1a\x75\xce\x0f\x80\xb3\xbb\xb3\x53\x38\x9a\x2c\x69\x13\x74\x40\x29\x6a\xdd\x0e\x3c\x88\x2d\x9d\xcf\x98\x1f\x63\x0e\xcb\x45\x26\x8c\x01\x38\xe7\x14\xb6\x43\x3b\xaf\xd5\x5d\x6c\x33\xce\x2c\xde\x7a\xaf\x91\x42\xbd\x1a\x19\x75\x72\xaa\x83\xcc\x5f\x83\xed\x3c\xea\xc6\x4c\xd4\x57\xd1\x04\x8a\xa3\x0b\x77\xbb\xc8\xc1\x74\x31\x84\x2e\x02\x45\x11\xa8\x42\x62\xd0\x8d\xc3\xaa\x08\xa5\x0a\xc2\xde\x2a\x10\x5c\xf4\x70\x55\x08\x7b\x73\xd4\xae\x0c\xc2\x47\x01\x6a\x03\x2e\x31\x04\x7a\xc4\x63\x2e\x31\x08\x6d\xc2\x3c\x74\xd7\x50\xd4\xb7\x95\x12\x4a\x5f\x3e\xbc\x8d\xd4\xcc\x5b\xce\xbd\xa5\xca\x19\x68\x54\xe0\x0a\xd4\xc0\x85\x01\x12\xbe\x26\xdc\x44\xd7\x71\xc9\x7c\x5e\x58\x19\x46\x97\xf4\x10\x24\x2a\x9f\xe9\x70\x44\x80\x11\x40\x6c\x85\x73\xe5\x5f\x12\xde\x4a\x1d\x17\xa2\x6b\x8b\x80\x57\x15\xb9\xca\xf9\xc5\x05\x9d\xc7\x7d\x16\x48\xdb\x60\x54\xf0\xb6\xc7\xa8\x59\xce\xfb\xee\xa2\x95\x49\xc2\xf6\x04\xbd\x53\xd9\xd8\x55\x5e\x97\x8d\xd9\x08\x01\x3e\xe1\x7d\x60\x1c\x08\x04\x9c\x19\x30\xcc\x5f\xae\xec\xaf\xcf\x71\xcb\xc3\xc7\x1f\x15\x60\x78\xf7\x96\x72\xe2\x62\x9b\x04\x9e\x99\xe9\xe8\x7d\x8e\x47\x12\xa9\x99\xe9\x6a\xcd\xcf\xc5\x56\x09\xec\x3c\xf1\x89\xce\x0a\x2c\x25\xf9\x74\x90\xd1\xd3\x48\x03\xc5\x4c\xbf\xa0\x5b\x88\xbc\x29\xa5\x1d\xb0\x37\x0f\x4a\x81\x64\x0d\x1e\xd5\x84\x72\x2d\x03\x6d\x6c\x65\xe5\x22\xb0\x76\xec\xa7\x9c\x71\xae\xb1\x3f\x7a\xf8\xe9\xab\xa7\x3f\x0c\x3f\xfb\x39\x3b\xc5\x0b\xc5\x38\xfd\xeb\x64\xf8\xd5\xd7\xaf\x9e\x1e\x0f\x1f\x3d\x1b\xfe\xf1\x64\xf8\xf0\xb8\x54\xab\xc0\x17\xb2\x84\xf0\xd6\x8d\x08\xd5\xff\x9d\x2a\x44\x38\x37\x3c\x61\xc3\x13\x36\x3c\x61\xc3\x13\xa6\x7a\xdf\xf0\x84\x0d\x4f\x28\xc2\x2e\xe5\x09\xb9\xb5\xc8\xbf\xc8\x12\xf2\x7c\x20\xd9\xd9\x64\x82\x4b\xb7\x03\xbd\x46\xb2\x12\xc9\xd2\x04\xd3\x97\x76\x5f\x22\xc6\xc1\x27\x8b\x17\xa9\xc2\xc9\x6e\x58\x61\x52\x3b\xcc\x2d\x4e\xee\xd8\x02\xe3\x06\x3b\xa8\x72\xd5\x70\xda\x42\xf9\xc4\x44\x9f\xdf\xd8\x73\x4a\x53\x48\xa2\x30\x4b\xcd\x6a\xa3\x18\xef\x94\x2b\x46\xcb\x9e\x85\xf5\x0e\x09\xbd\x83\x7c\xaa\xcb\x43\x21\x3c\x24\xbc\x5c\xd7\x27\x9c\x74\xa6\x7a\xad\x54\xd5\x54\xc8\xa9\x9a\x44\x29\xd2\xcf\x27\x8f\x19\xf4\x8b\x44\xa9\x22\xc2\x69\x1d\x4a\x8c\x51\x13\x7c\x6b\x4a\xdd\xc7\x0a\xae\x6b\xbb\x87\x78\x57\xca\xbb\x60\x7e\x18\xa5\x8c\x35\xba\x70\xd1\x7d\x5b\xa1\x19\xa9\x70\xa7\xe6\x73\xae\x76\x2c\x3c\x3f\x85\x47\x75\x4c\x07\xc7\xaf\x0c\x58\x5f\x39\x79\x49\x8c\x41\x65\x65\x3f\xbc\xb9\x53\xbb\x78\x70\xaf\xb1\x3d\x38\x37\xa5\x6b\x50\xeb\x8a\xb6\x89\x72\xb8\x00\x9c\xd8\xe0\x64\xaa\x93\xac\x25\x8b\xe9\xb3\x93\x2f\x4e\x5f\xbe\x74\xca\x6a\xa0\x37\x45\x58\x6b\x11\x32\xde\xac\xc8\xd4\x7b\xb7\xf8\x75\x2f\xb9\xa9\xb3\x46\xda\xe4\x44\x2b\x0e\xdc\x8a\xe8\x74\x1e\x5d\xa1\x9b\xce\x9e\xfc\xb9\x40\xef\xc1\xf0\xf9\x97\x7f\xff\xf2\x7d\x79\x23\xb6\xb8\xb9\x1c\x63\xf8\x4f\xe6\xd2\x85\xdd\xca\xa2\xb7\x2e\x2d\x3d\x7d\xaa\xcc\x0e\x1f\x1f\x8f\xbe\xfd\x71\xae\x24\x32\x17\x42\x67\x30\x7c\x72\x3c\xfc\xed\xa4\x98\xbf\x92\x4d\xf7\x0a\x89\x44\x4e\x0e\x3d\xbc\x66\x88\x59\xe3\xa8\x5a\xac\x77\xd3\x86\x98\xb7\x73\x87\x8f\x5f\x8e\xbe\x79\x30\x3a\xf9\x6e\xf4\xe8\xa7\x57\xf7\x1f\x94\x24\xb5\x90\xb3\x1b\xe1\xbf\x9c\x4d\x29\xd7\x92\xb1\xf0\xb6\x2c\x43\x43\x48\x8e\x8a\x55\xa6\x24\xe5\x6e\xb3\x43\x2b\x6c\x33\x56\x88\x6c\x72\xad\x54\x16\x5b\x55\x61\xd2\x9d\xd1\x34\xdc\x09\x6b\x8d\x29\xf1\xa5\x32\xf6\xda\x2c\x50\xc4\xb4\x17\x25\x7b\x17\x33\x3f\x7f\xc6\xbf\xff\x7d\x50\x6b\x4a\x59\x6b\xb9\xe9\x17\x66\x01\x75\x91\xb8\xa8\xf2\x57\xe8\x2d\x24\x0a\xd5\x75\x71\x07\x4b\x9f\xa0\x69\x2e\xc2\x9a\x08\xc5\x3e\xb6\xff\xeb\x57\xfa\x09\x63\xdc\x1a\x6c\xfd\x13\x00\x00\xff\xff\x85\x96\x6b\xba\x51\x1e\x00\x00")

func docFrontendSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_docFrontendSwaggerJson,
		"doc/frontend.swagger.json",
	)
}

func docFrontendSwaggerJson() (*asset, error) {
	bytes, err := docFrontendSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/frontend.swagger.json", size: 7761, mode: os.FileMode(420), modTime: time.Unix(1695088798, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docTcpHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x7b\x8f\xdb\xc6\x11\xff\xff\x3e\xc5\x56\x86\x81\x04\xb1\x44\x49\xa7\x3b\x5f\x65\x9e\x0a\xe7\x1c\xb7\x57\x34\xae\x91\xbb\x04\x28\x8a\xd6\x58\x91\x43\x71\xe1\xe5\x2e\xc3\x5d\xca\xa7\x16\x05\x92\xa2\x4f\xa3\x6e\x0a\x38\x4d\x90\x22\xe8\x0b\x2d\x10\x34\x40\x5d\xb4\x85\x03\xf4\xf9\x5d\x8a\xea\xec\x7c\x8b\x62\x49\x8a\xcf\x25\x75\xd2\x09\x76\xea\x04\x06\x2c\x72\x67\x77\x66\x76\x66\x7e\x33\xb3\x2b\x9d\xf9\xb9\x6b\x5f\x3d\x38\xfe\xda\xcd\x97\x90\x2b\x3d\x3a\xda\xda\x32\xe3\x4f\x84\x4c\x17\xb0\xad\x1e\x10\x32\x25\x91\x14\x46\x37\x03\x2e\xb9\xc5\x29\xba\xc6\xad\xd0\x03\x26\xb1\x24\x9c\x99\x46\x4c\x8d\x67\x7a\x20\x31\xb2\x5c\x1c\x08\x90\xfb\xad\x57\x8f\xaf\xb7\xf7\x5a\x09\x89\x12\x76\x1b\x05\x40\xf7\x5b\x42\xce\x28\x08\x17\x40\xb6\x90\x9c\xf9\xb0\xdf\x92\x70\x22\x0d\x4b\x88\x16\x72\x03\x70\xf6\x5b\xae\x94\xbe\x18\x1a\x86\xc3\x99\x14\x9d\x09\xe7\x13\x0a\xd8\x27\xa2\x63\x71\x4f\xcd\xfb\x82\x83\x3d\x42\x67\xfb\xaf\x8e\x43\x26\xc3\xe1\xa0\xdb\xbd\x74\xb9\xdb\xbd\x34\xe8\x76\x89\xc4\x94\x58\x2d\x23\x11\x1a\x89\x8a\x9f\x11\x1a\x73\x7b\x86\xbe\x9d\xbc\x20\x74\x87\xd8\xd2\x1d\xa2\xdd\x2e\x78\x57\xd2\x41\x0f\x07\x13\xc2\x86\xa8\x07\x1e\xc2\xa1\xe4\x19\xc5\xe2\x94\x07\x43\x74\xa1\xdf\xef\x67\x83\x4a\xc1\x76\xac\xcc\x10\xb5\x62\x75\x5a\x97\x90\xc0\x4c\xb4\x05\x04\xc4\xc9\xa6\xfa\xd8\xb6\x09\x9b\xb4\xc7\x5c\x4a\xee\x0d\xd1\x20\x13\xfb\x9d\xad\xe4\xc1\xed\xe5\xf4\x8b\x78\xdf\x01\x32\x71\xe5\x10\x31\x1e\x78\x98\x66\xdc\xc6\x3c\xb0\x21\x48\x99\xf5\xfc\x13\x24\x38\x25\x36\xba\x80\x31\xae\x17\xda\xed\xec\xc0\x49\x55\x6c\x3f\x27\x76\x13\x9c\x73\x76\xec\xec\x80\x87\xba\x55\x91\xdb\x4f\x65\xa7\x38\x27\x55\x05\x5d\xdb\x06\x8b\x07\x51\x20\x2b\xc9\x0c\xaa\xfe\xde\xd9\xbd\x0c\xfd\x9d\x0a\x27\x89\xc7\x14\xaa\xd1\xd4\xeb\x76\x2f\x96\xc2\x43\x90\x6f\xc1\x10\xed\xe5\xc7\x93\x3d\x59\x9c\x52\xec\x0b\x18\xa2\xc5\x53\x55\x8c\x82\x61\x9d\xa9\x2e\x77\xbb\x39\x9e\xd8\xba\x3d\x09\x78\xc8\xec\xf6\x42\x75\xdb\x52\xff\xaa\x3c\x23\x20\xc8\x60\xc8\xa4\xdb\xb6\x5c\x42\xed\xe7\x60\x0a\xec\xf9\x7c\x10\x54\x99\x39\x63\xf5\xaf\xca\xcc\xae\xc4\x4e\xc1\x49\x96\x65\x55\x9c\x94\x78\x07\xf5\x35\x1e\x92\x36\xf2\xcb\x4e\x22\xcc\x06\x26\x23\x50\x56\x23\xac\x1a\x5b\x8a\x45\x6e\x6f\xbd\xe7\xeb\xf8\x75\xaf\x20\x54\x5e\xbc\x18\xe8\x38\x04\xa8\xdd\x8e\xdd\x2c\xed\x12\xbf\x74\x5a\xce\xf1\x79\x3c\x2f\xe3\xd1\xdf\x00\x8f\x6d\x2d\x8f\xdd\x55\x58\x0c\xb4\x2c\xf2\x79\xaf\x6a\x17\x38\x91\xc0\x04\xe1\xec\x9c\xb6\x69\xe4\xb3\x82\x7d\x1a\xf9\xe8\x6d\xb4\x3a\x1f\xbd\xa1\x76\x56\x65\xb3\xb3\x8e\xbd\x59\xe8\x9d\xd7\xd4\x35\x2c\x56\xb1\x72\x0d\x0b\xbd\x81\x9b\x77\x24\x2c\x4c\x71\xd0\x9e\x62\x1a\x42\x5b\x35\x00\x62\xc1\x39\xc8\x21\xd5\x4d\x92\xdc\xb6\xa6\x4e\x2e\x58\x5d\x90\xdc\x6a\x5b\x9c\x49\x4c\x18\x04\x28\xa4\xb9\xf5\x94\x08\xd9\x8e\xea\x7f\x24\xa3\x9c\xde\x17\xf5\x82\x82\x53\xce\x2c\x94\x30\x68\x2f\xc4\xf7\x0a\x89\x5b\x93\x74\x32\x4d\xd0\x08\x51\x82\x46\x85\x22\x53\xc8\xd7\x63\x4e\xed\x7a\xb3\x38\x84\x2a\xb1\x58\xa9\xb5\xac\xb0\xd8\x44\xf8\x14\xcf\x86\x71\x19\x5a\xb9\x58\x2e\xb6\x31\x50\xb5\xb9\x5a\xa3\x75\x0a\x69\x7a\x84\xb2\x49\x8b\x4a\xb5\x2d\xa0\xb4\x99\x67\xa5\x1a\x63\x4a\x26\x6c\x88\x02\x65\xae\x33\xf2\x2d\x5b\x71\x8c\xed\x89\xae\x2e\x77\x76\xf3\x2e\x4e\xbd\x5b\x1c\x4e\x25\x11\x16\x05\xc1\x98\x72\xeb\xf6\x95\xad\x9a\xc8\x28\xae\xcd\x6f\xc0\x02\x26\x21\xb8\xb2\x3c\x0a\x0a\x2d\xc2\xae\xf2\x70\xa5\xff\xd8\xfb\xfc\x18\x0f\xf6\x9a\xeb\xbc\xe3\x74\xad\xbd\xdc\xda\x34\x4c\xa3\x32\xab\x7a\xd9\xf8\xa9\x5d\x88\x73\x4d\xb5\x2e\x16\xf9\x34\x9e\x02\x6c\x93\x50\x28\x98\x9c\x14\x3d\x6a\x1a\x49\x87\xbd\x95\xfa\x60\xa5\x46\x3f\x9b\xd1\x51\xa3\x51\xdb\x6e\x1a\xf1\xd1\x43\x3d\xaa\x4e\x25\x61\x6e\xba\x3d\x44\xec\xfd\x56\x74\xdc\x68\xd5\x9e\x46\xdc\x5e\x3a\xbf\x3f\x3a\x8e\xd2\x0a\x77\xd0\x01\x67\x12\x98\x14\xa6\xe1\xf6\x17\x74\x9b\x4c\x63\x86\xf9\x1c\xd2\x5a\x1c\x16\xcc\x90\x2e\xa8\xe9\x58\x2e\xd1\x15\x1e\x4d\x4a\x46\xb9\x57\x84\x4c\x9c\xec\xef\x02\xf6\xfd\x5b\xd2\xf2\x6f\x61\x9f\x5c\xec\x3b\x36\x78\xfc\x62\xdf\x99\xf6\x2e\xf6\x1d\x6c\x29\x85\x89\xdd\xf1\xd5\x4e\x5a\xa3\xdc\x4c\x43\xcd\x33\xa6\x3d\xa3\x38\xc7\x34\x70\x49\x4c\x48\x8b\x03\x05\xad\x34\xaf\x1a\x55\x1b\x14\xee\x28\x35\x3a\xd3\x5e\xe7\x6a\xa4\xc6\xa1\xdd\x1a\x99\xc2\xc7\x0c\x59\x14\x0b\xb1\xdf\x8a\xa0\xd6\x1a\xbd\x64\x1a\x6a\x74\xb4\x98\x55\x51\x33\x0e\x94\xaa\xe0\x15\x5e\x4d\xa3\xb8\xd5\x22\xbb\x0d\x7a\x25\xda\x72\x83\x47\x32\xfa\x1a\xde\x58\xd3\xfc\xd7\xc0\xe3\x07\x9c\x31\xb0\xe4\x2b\xf0\x7a\x08\x42\xea\x1d\xf1\x72\xe2\x88\xea\xfc\x75\x5d\xb2\x09\x85\x85\xcf\x99\x80\x15\x34\x8e\x17\x6c\x28\x8a\x36\xb7\x83\xce\x91\xc4\x32\x14\xcd\x18\xa8\x5f\xf7\x14\x51\xa1\x2c\x90\x6d\xb7\xda\x7d\xb5\x46\x47\xd1\x18\x7a\x4d\x8d\xa1\x63\x35\xa6\xd4\xcd\xb3\xcb\x44\x99\x86\x4d\xa6\xf9\x84\x9f\x7e\x44\x19\x35\xb1\x4b\xbe\xce\xe7\xf2\xa7\xe9\xf6\xa3\xac\xba\x3c\xd9\x9d\x2d\x21\xba\xfd\xdc\xce\x92\xca\x70\xcc\xfd\x9c\xb1\x13\x75\x93\x17\x7f\x64\x1a\xfe\x68\x51\x28\xb7\xb6\xca\x96\x72\xb7\xcb\xea\x69\x92\x60\x96\xe8\xdc\xed\xdc\xd6\x12\xde\xe9\x7b\xdc\xd3\x26\xf6\xc8\xfa\xe7\x56\xc1\x63\x32\xbb\x66\xcb\xc6\x82\x91\x29\xed\xd1\x0d\xec\x81\x69\x48\x3b\x7e\x09\xbd\x31\x04\xe9\xeb\x35\x10\x56\x40\xfc\xe4\x02\xce\x1e\x99\x86\x0c\x8a\x91\x50\x61\x6c\xca\xb8\x98\x36\x04\x97\x59\x64\xb2\x18\xb4\xa3\xb0\xbe\xc1\x59\xac\x8e\x76\x46\xb7\x9e\x94\x18\x46\x37\xa1\xac\xf6\x6a\x1a\x65\x39\xae\x5e\x78\xaf\xdb\x7b\x9a\x9a\x09\xbf\x49\xb5\xfe\xe6\x55\x33\x8d\x92\x9b\x4d\x23\x8a\xba\x51\x39\xe4\xf3\xa1\xbf\x51\x18\xaf\x52\x41\xcf\x09\xdf\x4c\x9d\x7a\xd8\xea\x8a\xa7\xae\x40\xea\xa0\xac\x6b\x30\x8a\xb0\xce\xdd\xac\xb4\xca\x28\xae\x22\x3b\xc3\xf6\x75\xb5\x2e\x45\xb3\xca\xb8\xe9\xcb\x57\xf0\x18\xe8\x99\x81\xae\x85\xba\x1e\xec\xba\xda\xa8\x0b\xe2\x38\x00\x6d\x98\x12\x0b\x6e\x31\xae\x8f\xd1\x24\x4a\xb3\xaa\x22\x83\x28\x44\xe2\xcf\xb8\x7a\x34\xac\x6b\xa2\xf9\xa3\xc7\x7f\xfc\xd7\xfc\x77\x3f\x7c\xf4\x8f\x77\xe6\x6f\x7d\x84\xea\x60\xa0\x03\x42\xa5\x3e\x56\xcc\x90\xc2\x41\xdf\x33\x36\xbd\x98\xee\x60\xf4\x1a\xa6\xc4\xc6\x12\x6c\x14\x79\x50\x9d\x27\x06\x65\xcb\xe7\xe1\x96\x8d\xea\xa2\xa1\xd1\x01\x59\x88\xd4\x4c\x48\x74\x21\x9c\x89\xb3\xdb\x47\x1b\x2d\x4f\x2c\x5e\x34\xc3\xda\xbe\xb9\x46\x7c\x32\x9f\x92\x24\xcc\x3a\x1e\x61\xb7\x28\xb0\x21\xea\xe9\x3a\xa9\x33\x73\xc1\x27\x09\x97\x6e\xf7\x3c\x7c\xc8\x84\xf1\x00\x6e\x81\xe7\xcb\xd9\x10\x39\x98\xaa\x2e\x76\x25\x76\xe5\x86\x2e\x1b\x5f\x2b\xfe\xb5\x08\xa8\x94\x84\xca\xc2\x4a\xde\x5b\x3d\xd1\x2e\x9a\x7e\x6d\x63\x5f\x4a\xb5\x31\xda\x1f\xff\xfb\x97\xa7\x3f\xfd\xfd\xa3\x5f\x7c\x6f\x7e\xff\xde\xfc\x6f\x6f\x7f\xea\xf3\xaf\x48\x4e\x0d\x67\x49\xbe\xab\x9e\x60\x9a\x4f\x29\xe7\x48\xdc\xb1\xef\x1e\xdd\x7d\x78\xfa\xc6\x9b\x8f\x7e\xfd\xe6\x79\x72\xf7\x12\xf3\xa8\x24\x2c\x89\x57\xd3\x91\x96\x0d\x14\x7f\x83\x1c\x77\x1d\xe3\xd0\xe9\x1c\x13\x0f\x84\xc4\x9e\xdf\x1a\xd5\x92\xce\x6b\x8a\x7f\xde\x9f\xff\xf8\xde\xe9\xfb\xf7\xe6\x77\x7f\x33\x7f\xef\x83\xd3\x77\x1f\x7e\xfc\xee\x5f\x9f\x44\x31\xab\x80\xf7\x9c\x20\x3e\x53\xd4\x94\x20\x5d\x8a\x83\x67\xf6\x5c\x74\x14\x5a\x16\x88\xba\xf2\xbb\xf4\x58\x14\xe7\xbc\xd3\x1f\xfd\x6c\x7e\xf7\x57\x9b\x3f\x88\x1c\xb2\xa9\xea\x10\xae\x06\x93\xe8\x7e\xb4\xe1\x20\xd2\xa8\xe4\xfc\xad\xef\x9e\xfe\xfc\x4f\x1f\xbf\xfd\xde\xe3\x07\x0f\x36\xaf\xe4\x0d\x2e\x5f\x81\x09\x11\x32\x71\xa2\x76\x52\xf3\x39\x29\xee\x13\x4f\xdf\xff\xc3\xe9\x5f\x3e\x98\xff\xe0\x27\x9b\xd7\xf1\x80\x33\x87\x12\xab\xc1\x82\xdb\xcd\x6e\x8e\x0a\xdc\xfc\xa3\x3f\x3f\xfe\xed\x87\xf3\xef\x3f\xfc\xef\xdf\xdf\x79\xf4\xe1\x83\xd8\xf7\x4f\xf0\x8c\x17\xfd\xbf\x38\xb8\x9d\xf5\x12\xc8\xed\x27\x97\x3e\x05\xd0\xd6\x7d\x81\x97\x5d\x9e\x97\x50\xb6\x80\x6e\x9c\x66\x51\xa1\xde\xde\xe0\x12\x44\xfa\x76\xf0\xc2\x0b\xe9\xf3\x97\xf1\x14\xa7\x2f\x37\x67\xd2\x5d\x80\x5a\xda\xa3\x2f\xf2\x6c\xc9\x85\x6c\xd2\x97\x6e\xa6\xcf\xaf\x84\xe3\x59\x25\x07\x94\xf0\x5f\xc6\x7e\x21\x2d\x04\x91\xa5\x6c\x1e\xea\x9a\x0b\x7b\x14\x13\xaa\xce\xd3\xd7\x86\x65\x2b\x9a\x68\x0e\xe5\x58\x13\x7c\x29\x69\x77\xb0\x51\x9e\xd7\x75\xa4\x62\x40\x6a\xec\x14\x31\xd4\x98\xa9\x41\xd0\x7a\xbb\x5d\x8f\xb4\xad\xc9\x21\xeb\xb3\x5c\xcf\x44\x84\xc9\xed\xbe\xc6\x44\xd1\xb8\x5e\xd0\xab\x02\x04\x9a\xe2\x80\x44\xdf\x7c\x52\x60\x13\xe9\x22\x60\x16\xb7\xd5\x81\x03\x1d\x32\x70\x1c\x62\x11\x60\x12\x39\x3c\x48\x29\x88\xc1\x04\x4b\x32\x05\xc4\xa2\xfa\x28\xd0\x7f\xde\xb8\x8f\x88\x83\x66\x3c\x0c\x50\xd4\x34\x23\x22\x10\x25\xb7\x81\xce\x90\xe4\xc8\xc5\x6a\xee\x62\x51\x04\x6c\x71\x09\x85\x02\x90\x88\xb4\x43\x84\x09\x09\xd8\xee\xe8\xd5\x6c\xd8\x01\xd1\x55\x9e\x65\x84\x75\x98\xc1\x44\x57\x42\x14\xf1\x45\x32\x61\xa1\x87\x78\x80\xae\x93\x13\xf5\xf4\x1c\x16\x28\x80\xd7\x43\x12\x80\xfd\xfc\x3a\x6e\xdc\x1d\xe8\xdd\x58\x87\xc4\x4f\x86\x1b\x77\x07\xcb\xdd\x58\xb7\x03\xca\xd9\xa4\x76\x91\xd1\x48\x5d\x8b\xa5\xf2\xa6\xb1\xb8\x4c\xaa\x77\xea\xca\xce\x0b\xeb\x40\x18\xae\x8d\x42\xfd\x9a\x26\x7e\x4d\x61\xdc\x60\xcb\x26\x96\xe1\x27\x02\x1a\x61\x1d\x36\xc2\xb5\xc1\x51\xbf\xdd\x4d\x87\x6a\x13\xcf\x70\x13\xc1\xba\x31\x33\x8b\xba\x20\x16\xeb\x97\x92\x23\x32\x61\x60\x23\xc2\x64\x9c\x37\x3a\xe8\xd8\x05\x01\xc8\xe3\x01\xa0\x34\x3d\xd1\x59\xbc\x04\xaa\xa9\x49\xba\x98\xa1\x00\x26\xa1\x6a\x22\x23\x3d\xc4\x67\xd5\x22\xf6\x95\x16\x12\x62\xfd\x7a\xb1\x71\x5f\xed\x0e\x1a\x7c\xf5\xac\x97\x04\x87\x9c\x80\xad\x85\x53\x42\xd1\x4b\xbb\x4a\xef\xe0\x99\x40\x8e\x2a\xc5\xe3\x99\x04\xd1\x41\x2f\x17\xec\x1f\x5b\x39\x4c\xfa\x27\x27\x29\xc7\x08\x07\x80\xb8\x23\x81\xa1\x49\x00\x58\x42\x10\xcf\xeb\x7f\xb3\xbf\xb7\xe1\x52\xf2\xff\x5a\x45\x22\xb3\x6b\x31\x93\x50\x1a\x1d\x12\xfd\xca\x6e\x99\x47\x54\x2b\xb4\xdc\x23\x3b\xbb\xcf\x52\xf9\x59\x3d\x75\xd5\x23\x43\xac\x08\x8d\xcf\x0a\x41\x62\x4d\x7d\x29\x58\x35\xae\x3f\xb5\xb9\x7a\xcc\x39\xd5\x18\x50\x0d\xaf\x72\xc7\x50\x3f\x5f\x51\x00\xb3\x35\x89\x1b\x95\x76\x1c\x84\x70\x40\xb1\x10\xc6\x75\x4c\x45\xfc\xb8\x7a\xd4\x25\xdf\xcb\x57\x63\xae\xc1\x39\x57\x51\x4c\x45\x5e\x28\x24\xc2\x71\xfc\x25\x3f\x91\x45\xd1\x1f\xf5\x25\x9d\x85\xad\xd0\x71\xb9\x3d\x26\x12\x5d\x3d\x3a\x38\x3c\x8c\x7e\x04\x5d\x13\x9d\x4d\x02\x8f\x1a\x68\x42\x06\x46\xc8\x88\x12\xb7\x3a\xe3\x75\x69\xb1\x42\xe8\xb9\x68\xb3\xab\x63\x3d\x42\xa9\x2e\x4e\x67\x8b\xbb\xce\x0a\xe9\x65\x3c\x4b\x4d\x8c\xd9\x0c\xe1\x60\x4c\x64\x80\x83\x19\x12\xf0\x7a\x08\xcc\x8a\x7e\xc7\xdc\x04\xff\x46\xb8\xcd\x24\x2c\x31\xb2\x9e\xf0\xf5\x6f\x28\x91\x6b\x33\x5d\x6a\xe0\x28\x6c\xda\x7b\x2f\x1e\x1e\x9f\xcd\xca\x85\xbb\xef\xdc\xbd\xb7\x69\xc4\xc3\xa6\x91\xfc\x21\xeb\xff\x02\x00\x00\xff\xff\x87\xc6\x55\x52\xda\x3a\x00\x00")

func docTcpHtmlBytes() ([]byte, error) {
	return bindataRead(
		_docTcpHtml,
		"doc/tcp.html",
	)
}

func docTcpHtml() (*asset, error) {
	bytes, err := docTcpHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/tcp.html", size: 15066, mode: os.FileMode(420), modTime: time.Unix(1695088798, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docWssHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xfd\x6e\x1b\xb9\x11\xff\xdf\x4f\x31\xdd\x20\x40\x82\x8b\xb4\x92\x2c\x2b\xae\xb2\xde\x22\xe7\x5c\x5a\x17\xb8\x6b\xd0\x38\x05\x8a\xa2\x0d\xa8\xe5\xac\x96\x08\x45\xea\x48\xae\x62\xb5\x28\xd0\x77\xe8\x1b\xf6\x49\x0a\x72\x3f\xb4\xdf\x8e\x74\x02\x7a\xbd\x3b\xf8\x0f\x73\x39\xe4\x6f\x86\xf3\x9b\x0f\xee\xda\xc1\xaf\xde\xfc\xe1\xf6\xfe\xcf\xef\xbe\x81\xc4\x6c\x78\x78\x71\x11\x64\xbf\x01\x82\x04\x09\xb5\x03\x80\xc0\x30\xc3\x31\x7c\xa7\xa4\x91\x91\xe4\xf0\x46\x46\xe9\x06\x85\x21\x86\x49\x11\xf8\x99\x34\x5b\xb9\x41\x43\x20\x4a\x88\xd2\x68\x6e\xbc\x0f\xf7\x6f\x47\xd7\x5e\x2e\xe2\x4c\x7c\x02\x85\xfc\xc6\xd3\x66\xcf\x51\x27\x88\xc6\x03\xb3\xdf\xe2\x8d\x67\xf0\xc1\xf8\x91\xd6\x1e\x24\x0a\xe3\x1b\x2f\x31\x66\xab\x97\xbe\x1f\x4b\x61\xf4\x78\x2d\xe5\x9a\x23\xd9\x32\x3d\x8e\xe4\xc6\xae\xfb\x4d\x4c\x36\x8c\xef\x6f\x3e\xac\x52\x61\xd2\xe5\x7c\x32\x79\xf1\x72\x32\x79\x31\x9f\x4c\x98\x21\x9c\x45\x9e\x9f\x2b\x75\xaa\xb2\x31\xc0\x4a\xd2\x3d\xfc\x23\x7f\x00\xf8\xcc\xa8\x49\x96\xb0\x98\xe0\xe6\x55\x39\xb9\x21\x6a\xcd\xc4\x12\xa6\xb8\x01\x92\x1a\x79\x90\x44\x92\x4b\xb5\x84\x27\xb3\xd9\xec\x30\x69\x0d\x1c\x65\xc6\x2c\xc1\xcb\xcc\xf1\x5e\x80\x26\x42\x8f\x34\x2a\x16\x1f\x96\x6e\x09\xa5\x4c\xac\x47\x2b\x69\x8c\xdc\x2c\x61\x7e\x50\xfb\xcf\x8b\x7c\x90\x4c\x2b\xf6\x39\xec\xcf\xc8\xd6\x89\x59\x82\x90\x6a\x43\xf8\x01\x6d\x25\x15\x45\x55\x82\x4d\xb7\x0f\xa0\x25\x67\x14\x9e\x10\x42\xfa\x95\x4e\xc6\x57\xf8\xd0\x56\x3b\xab\xa8\x3d\x07\x72\xc5\x8f\xe3\x2b\xdc\xc0\xa4\xad\xf2\xf2\x7f\x72\x52\x52\xd1\x6a\x83\x6e\x44\x31\x92\xca\x05\xb2\xd5\x2c\xb0\xcd\xf7\xd5\xe2\x25\xce\xae\x5a\x48\x86\xac\x38\xb6\xa3\x69\x3a\x99\x3c\x6d\x84\x87\x66\x7f\xc7\x25\x5c\x57\xe7\xf3\x33\x45\x92\x73\xb2\xd5\xb8\x84\x62\xd4\x56\x63\xd3\xb0\xcf\x55\x2f\x27\x93\x0a\x26\x89\x3e\xad\x95\x4c\x05\x1d\x15\xa6\xd3\xc8\xfe\xb4\x31\x5d\x22\x18\xb5\x14\x26\x19\x45\x09\xe3\xf4\x19\xee\x50\x3c\xaf\x06\x41\x1b\x2c\x5e\xd9\x9f\x36\x18\x6d\xc5\x4e\x8d\xa4\x28\x8a\x5a\x24\xe5\xec\xc0\xac\x83\x21\x43\x61\xdb\x24\x89\x09\x8a\xc2\xb8\xa4\x6c\x47\x58\x3b\xb6\x2c\x44\xe5\x6c\xd3\xe7\x7d\x78\x93\x57\x00\xcd\xcd\xc5\xc4\x38\x66\xc8\xe9\x28\xa3\xd9\xd0\x06\x5e\xb9\xac\x42\x7c\x35\x9f\x1f\xc3\x98\x9d\x01\xe3\xb2\x13\x63\x71\x0c\xc4\xbc\x13\xa2\x5a\xf7\xda\x7e\xc1\x07\x83\x42\x33\x29\x7e\xa0\x6f\x06\x71\x8e\xf0\xcf\x20\x4e\xb7\x8f\x8e\xc7\xe9\x76\xd4\xd5\xb1\x30\x57\xa7\xf8\x5b\xa4\x9b\x1f\xea\xea\x1e\x88\x63\xbc\xdc\x03\xd1\xed\xe0\xe1\x13\xe9\x88\x70\xa2\x46\x3b\xc2\x53\x1c\xd9\x0b\x80\x2e\x90\x55\x25\x53\x93\xbc\xc8\x5d\x76\xf4\xc9\x02\xea\x89\x91\xd1\x28\x92\xc2\x10\x26\x50\x41\xca\x2b\xfb\x39\xd3\x66\xe4\xfa\xbf\xd3\xd1\x2c\xef\x45\xbf\xe0\x18\x37\x2b\x0b\x67\x02\x47\x85\xfa\x69\xad\x70\x77\x14\x9d\x83\x25\x10\x02\x67\x10\xd6\x9a\x4c\xad\x5e\xaf\x24\xa7\xfd\x6e\x89\x19\xb7\x6a\x89\x35\xeb\xb1\xc6\x42\x99\xde\x72\xb2\x5f\x66\x6d\xe8\xe8\x66\x59\x1c\x63\x6e\x7b\x73\xbb\x47\x77\x19\xd4\x71\x47\x68\xba\xb4\x6e\xd4\x28\x42\xce\x87\x31\x5b\xdd\x98\x70\xb6\x16\x4b\x50\xd6\x5d\x5f\x88\xdb\xf4\xe2\x8a\xd0\x75\x57\x5f\x1e\x2f\xaa\x14\x97\xec\xd6\xa7\x4b\x4d\x4c\xb8\x20\x58\x71\x19\x7d\x7a\x75\xd1\x13\x19\xf5\xbd\xd5\x03\x44\x28\x0c\xaa\x57\x8f\x47\x41\xed\x8a\xb0\xb0\x0c\xb7\xee\x1f\xd7\xbf\x5e\x91\xf9\xf5\x70\x9f\x8f\xe3\x49\x74\x5d\xd9\x5b\x86\xa9\x6b\xb3\xf6\x2e\x9b\x8d\x46\xb5\x38\xef\xe8\xd6\xf5\x26\x5f\xc6\x93\x22\x94\xa5\xda\xa6\xc9\x43\x9d\xd1\xc0\xcf\x6f\xd8\x17\x25\x07\x47\x5d\xf4\x0f\x2b\xc6\x76\xd6\x5d\xdb\x03\x3f\x7b\xf5\xb0\x43\x7b\x53\xc9\xc1\x83\x64\x0a\x8c\xde\x78\xee\x75\xc3\xeb\x7d\x1b\x49\xa6\xe5\xfa\x59\x78\xef\xca\x8a\x8c\xe1\x56\x0a\x83\xc2\xe8\xc0\x4f\x66\x85\x9c\xb2\x5d\x06\x58\xad\x21\x5e\xf1\xb2\x10\xa4\xbc\x90\x96\x73\x95\x42\x57\x1b\x06\x9c\x85\x95\x47\x80\x80\xe4\xe7\x7b\x42\xb6\xdb\x8f\x9f\xb5\xfe\x48\xb6\xec\xe9\x2c\xa6\xb8\x91\x4f\x67\xf1\x6e\xfa\x74\x16\x93\xc8\x1a\xcc\xe8\x78\x6b\x4f\xe2\x85\x95\x95\xbe\x5d\xe7\xef\xa6\x7e\x7d\x4d\xe0\x93\x86\x9a\x94\xd7\x27\x6a\x56\x75\x3c\x76\x98\x3a\x60\xf0\xd8\x9a\x31\xde\x4d\xc7\xaf\x9d\x19\x77\xd4\x0b\x03\xbd\x25\x02\x22\x4e\xb4\xbe\xf1\x5c\xaa\x79\xe1\x37\x81\x6f\x67\xc3\x62\x55\xcb\xcc\x2c\x50\xda\x8a\x8f\x78\x0c\xfc\xfa\x51\xeb\x70\x17\xd5\xd3\x1d\x8e\xd2\xee\x33\x5e\xf8\xde\xcd\xc1\x9f\xec\x1c\xdc\xdb\x39\x6b\x6e\x15\xee\xa0\x2a\xf0\x29\xdb\x55\x43\xbb\xfc\xe5\x62\x27\xf7\x42\xb5\xa2\x55\x22\x25\x48\x66\x2e\x7e\x1e\xa7\xf5\xcb\xa8\x4f\x66\x95\x93\xe5\x39\x70\x2f\xb7\x15\x67\xe7\xe6\xe6\x0f\xdb\x30\xf0\xb7\x61\x51\x12\x2e\x2e\x9a\x9e\x4a\x2e\x9b\xe6\x75\xd0\x7d\xa0\x34\xb9\xac\x1c\x2d\xc7\x2e\x9f\xb3\xee\x9d\xfb\xe3\x70\x53\xf0\x6a\x8c\x99\xc3\x07\x85\xc3\x9c\x0a\x03\x43\xc3\xef\xc8\x06\x03\xdf\xd0\xec\x21\xdd\xac\x50\x95\x8f\x6f\x50\x47\x8a\x6d\xf3\x4f\x0d\x34\x0c\x7c\xa3\xea\x91\xd0\x02\x0e\x4c\x56\x36\x06\x82\x2b\xa8\x83\x14\x93\x34\xfc\x40\x76\x1f\xbf\x93\x22\x33\xa7\x73\xc5\xa4\x5f\x94\x3b\xa6\x6b\x41\xd3\xec\x7a\xfd\xf0\x1b\x16\x07\xbe\x73\x60\xd8\x64\xaf\xca\x62\x59\xe5\x1c\x8f\x5f\x1a\xeb\xb6\xfc\x41\x8b\xb3\xbe\x1b\xd9\xa1\x1a\x36\x9c\x5c\x30\x97\x45\xa7\x03\x3f\x10\x28\x8d\xd5\x94\x3f\xdd\x7e\xf5\x55\x39\xfe\x3d\xd9\x91\xf2\xe1\xdd\xde\x24\x05\xa7\x86\x86\xbf\x95\x87\x2d\x4f\x0e\x8b\x7e\xf7\xae\x1c\xff\x31\x5d\xed\x5b\x21\xd0\xa0\xbf\x49\x7d\x2d\x2a\x94\xf3\x14\x95\x69\x33\x36\x33\xf6\x32\x41\x9b\xbc\x20\x53\xd9\x31\x3b\xb4\x63\x48\x16\x73\x49\xcc\x80\x68\x31\x3f\x2b\xe6\xdb\x2e\x51\x3d\x20\x3b\xfc\xe4\x00\x3b\xdc\x34\xa0\xe8\xb4\xd3\x9e\x26\xba\x9c\x9d\x13\xf2\x34\x17\x31\x61\x2e\x67\x1d\x2e\x72\xf3\xdd\x8a\x3e\x68\xd4\xb0\x23\x8a\xb9\xab\x2c\x47\xb1\x36\x09\xa0\x88\xa4\x6d\x1f\x63\xb8\x13\x18\xc7\x2c\x62\x28\x0c\xc4\x52\x95\x12\x10\xb8\x26\x86\xed\x10\x84\x2b\x8f\x1a\xfe\xf3\xaf\x7f\x03\x8b\x61\x2f\x53\x05\xee\xfd\x1e\x98\x06\xce\x3e\x21\xdf\x83\x91\x90\x10\xbb\xb6\xd8\xe4\x12\x5b\xbf\x80\x54\x23\x68\x67\x1d\x30\xa1\x0d\x12\x3a\xee\x36\x73\xe0\x04\x4c\xf4\xf8\x70\x48\x70\x0a\x18\xae\xf3\x36\xd0\x12\x7e\xcd\xd6\x22\xdd\x80\x54\xf0\x96\x3d\xd8\xd1\x33\xa2\x41\xe1\xf7\x29\x53\x48\x9f\x9f\x42\xe3\x62\xde\x4d\x63\x5f\x26\xfe\x38\x68\x5c\xcc\x1f\xa7\xb1\xef\x04\x5c\x8a\x75\xef\x26\x7f\x50\x7a\x12\xa4\x65\xd3\xd7\x46\xb1\xbe\x35\x19\xa9\x47\x93\x97\xf6\x25\x61\x7a\x72\x16\x76\xef\x19\xc2\x1b\x0a\xe3\x01\x5f\x0e\x41\xa6\x3f\x8a\xd4\x48\xfb\x72\x23\x3d\x39\x39\xfa\x8f\x7b\xee\x50\x1d\xc2\x4c\xcf\x11\xac\x67\x73\xb3\xee\x0b\x62\x7d\x7a\x2b\x79\xcf\xd6\x02\x29\x30\x61\xb2\xba\x31\x86\xfb\x04\x35\xc2\x46\x2a\x84\xb2\x3c\xf1\x7d\xb6\x05\xdb\xa5\xc9\x24\x44\x80\xc2\x75\x6a\x2f\x91\xce\x0e\xfd\x4b\xb7\xc8\xb8\xea\x4c\x09\x7d\x7a\xbf\x38\x3b\x57\x8b\xf9\x00\x57\x3f\xf5\x96\x10\xb3\x07\xa4\x9d\xe9\x94\x4b\xba\xb5\xbd\xe6\x9f\xc9\x5e\x43\x6c\x5b\xf1\x6a\x6f\x50\x8f\xe1\xdb\x9a\xff\x33\x2f\xa7\xf9\xfd\x29\xce\xdb\x31\x10\x85\x20\x63\x83\x02\xd6\x0a\x89\x41\x95\xad\x9b\xfd\x6d\x76\x7d\xe6\x56\xf2\xff\xda\x45\x9c\xdb\x3b\x73\x26\x97\x0c\x12\xe2\x3e\x9b\x3e\xc6\x88\xbd\x0a\x3d\xce\xc8\xd5\xe2\xa7\xd4\x7e\x8e\x2f\x5d\xfd\x99\xa1\x8f\x4c\x8d\x5f\x1a\x41\xee\xcd\xee\x56\x70\x6c\x5c\xff\x6c\x6b\xf5\x4a\x4a\xde\xe1\x40\x3b\x7d\xcc\x37\x86\xfe\xf5\x56\x82\x44\x9c\x28\x3c\xab\xb6\x7b\x95\xe2\x2d\x27\x5a\xfb\x6f\x09\xd7\xd9\xf0\xf8\xa8\x73\x1c\x74\xc5\xdc\x00\x39\xaf\x21\x93\xc2\x26\xd5\x06\x48\x16\x7f\xf9\xdf\x3c\xc0\xfd\x97\x56\x7e\xb3\xa0\x36\x3b\x5e\x8e\x56\xcc\xc0\xeb\xf7\xb7\x77\x77\xee\xaf\x5a\x3d\xd1\x39\xa4\xf0\xfd\x80\x4c\x1b\xe5\xa7\x82\x59\x75\xc7\x03\x9f\x2a\xcb\x0c\x82\x67\xee\xb0\xc7\xe7\xba\xcb\xd2\xae\x38\xdd\x17\xdf\x3a\x5b\xa2\x6f\xc9\xbe\x74\x31\x11\x7b\x20\x6a\xc5\x8c\x22\x6a\x0f\x1a\xbf\x4f\x51\x44\xee\x0f\x53\x43\xe9\x3f\x98\x6e\x7b\x83\x8f\x38\xb9\x5b\xf0\x97\xbf\x5a\x95\x27\x83\x3e\xea\x60\x17\x36\xa3\xeb\xaf\xef\xee\xbf\xcc\xcb\xb5\x6f\xdf\x95\xef\xde\x81\x9f\x4d\x07\x7e\xfe\x9f\x89\xff\x0d\x00\x00\xff\xff\x3b\x49\xa9\x56\xab\x28\x00\x00")

func docWssHtmlBytes() ([]byte, error) {
	return bindataRead(
		_docWssHtml,
		"doc/wss.html",
	)
}

func docWssHtml() (*asset, error) {
	bytes, err := docWssHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/wss.html", size: 10411, mode: os.FileMode(420), modTime: time.Unix(1695088798, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"doc/backend.swagger.json":  docBackendSwaggerJson,
	"doc/frontend.swagger.json": docFrontendSwaggerJson,
	"doc/tcp.html":              docTcpHtml,
	"doc/wss.html":              docWssHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"doc": &bintree{nil, map[string]*bintree{
		"backend.swagger.json":  &bintree{docBackendSwaggerJson, map[string]*bintree{}},
		"frontend.swagger.json": &bintree{docFrontendSwaggerJson, map[string]*bintree{}},
		"tcp.html":              &bintree{docTcpHtml, map[string]*bintree{}},
		"wss.html":              &bintree{docWssHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
