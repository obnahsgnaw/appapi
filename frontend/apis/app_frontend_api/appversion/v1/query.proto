syntax = "proto3";
package app_frontend_api.appversion.v1;
option go_package = "app_frontend_api/appversion/v1";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "app_frontend_api/common/v1/obj.proto";
import "app_frontend_api/appversion/v1/entity.proto";

service AppVersionQueryService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "2.版本服务";
  };
  // 列表
  rpc Paginate(common.v1.PaginateRequest) returns (AppVersionPaginateResponse){
    option(google.api.http) = {
      get: "/v1/versions";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "已发布列表";
      security:{
        security_requirement:{
          key:"AppId"
        }
        security_requirement:{
          key:"BearerToken"
        }
      }
      extensions:{
        key: "x-order";
        value: {
          number_value: 1
        }
      }
    };
  }
  // 最新版本
  rpc Latest(LatestRequest) returns (LatestResponse){
    option(google.api.http) = {
      get: "/v1/versions/latest";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "最新版本";
      security:{
        security_requirement:{
          key:"AppId"
        }
        security_requirement:{
          key:"BearerToken"
        }
      }
      extensions:{
        key: "x-order";
        value: {
          number_value: 2
        }
      }
    };
  }
}

message AppVersionPaginateResponse {
  option (validate.ignored) = true;
  common.v1.PaginateMeta meta = 1;
  repeated AppVersion list =2;
}
message LatestRequest{}
message LatestResponse{
  option (validate.ignored) = true;
  AppVersion version = 1[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description:"最新版本, 无则为null"
  }];
}
