// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: app_backend_api/app/v1/version.proto

package appv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v1 "github.com/obnahsgnaw/appapi/gen/app_backend_api/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppVersionPaginateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit   uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Keyword string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Sort    string `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	AppId   string `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *AppVersionPaginateRequest) Reset() {
	*x = AppVersionPaginateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_version_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionPaginateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionPaginateRequest) ProtoMessage() {}

func (x *AppVersionPaginateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_version_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionPaginateRequest.ProtoReflect.Descriptor instead.
func (*AppVersionPaginateRequest) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_version_proto_rawDescGZIP(), []int{0}
}

func (x *AppVersionPaginateRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AppVersionPaginateRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AppVersionPaginateRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *AppVersionPaginateRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *AppVersionPaginateRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type AppVersionDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *AppVersionDetailRequest) Reset() {
	*x = AppVersionDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_version_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionDetailRequest) ProtoMessage() {}

func (x *AppVersionDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_version_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionDetailRequest.ProtoReflect.Descriptor instead.
func (*AppVersionDetailRequest) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_version_proto_rawDescGZIP(), []int{1}
}

func (x *AppVersionDetailRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppVersionDetailRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type AppVersionPaginateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *v1.PaginateMeta          `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	List []*AppVersionPaginateData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AppVersionPaginateResponse) Reset() {
	*x = AppVersionPaginateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_version_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionPaginateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionPaginateResponse) ProtoMessage() {}

func (x *AppVersionPaginateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_version_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionPaginateResponse.ProtoReflect.Descriptor instead.
func (*AppVersionPaginateResponse) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_version_proto_rawDescGZIP(), []int{2}
}

func (x *AppVersionPaginateResponse) GetMeta() *v1.PaginateMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *AppVersionPaginateResponse) GetList() []*AppVersionPaginateData {
	if x != nil {
		return x.List
	}
	return nil
}

type AppVersionPaginateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Version     string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Force       bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	PublishedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
}

func (x *AppVersionPaginateData) Reset() {
	*x = AppVersionPaginateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_version_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionPaginateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionPaginateData) ProtoMessage() {}

func (x *AppVersionPaginateData) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_version_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionPaginateData.ProtoReflect.Descriptor instead.
func (*AppVersionPaginateData) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_version_proto_rawDescGZIP(), []int{3}
}

func (x *AppVersionPaginateData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AppVersionPaginateData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AppVersionPaginateData) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *AppVersionPaginateData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AppVersionPaginateData) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

type AppVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Version     string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	VersionNum  uint32                 `protobuf:"varint,5,opt,name=version_num,json=versionNum,proto3" json:"version_num,omitempty"`
	Force       bool                   `protobuf:"varint,6,opt,name=force,proto3" json:"force,omitempty"`
	Url         string                 `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	PublishedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	OperateInfo *v1.OperateInfo        `protobuf:"bytes,9,opt,name=operate_info,json=operateInfo,proto3" json:"operate_info,omitempty"`
	Conflict    *v1.Conflict           `protobuf:"bytes,10,opt,name=conflict,proto3" json:"conflict,omitempty"`
}

func (x *AppVersion) Reset() {
	*x = AppVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_version_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersion) ProtoMessage() {}

func (x *AppVersion) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_version_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersion.ProtoReflect.Descriptor instead.
func (*AppVersion) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_version_proto_rawDescGZIP(), []int{4}
}

func (x *AppVersion) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppVersion) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AppVersion) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AppVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AppVersion) GetVersionNum() uint32 {
	if x != nil {
		return x.VersionNum
	}
	return 0
}

func (x *AppVersion) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *AppVersion) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AppVersion) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *AppVersion) GetOperateInfo() *v1.OperateInfo {
	if x != nil {
		return x.OperateInfo
	}
	return nil
}

func (x *AppVersion) GetConflict() *v1.Conflict {
	if x != nil {
		return x.Conflict
	}
	return nil
}

type AppVersionCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string              `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Data  *AppVersionFormData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AppVersionCreateRequest) Reset() {
	*x = AppVersionCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_version_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionCreateRequest) ProtoMessage() {}

func (x *AppVersionCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_version_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionCreateRequest.ProtoReflect.Descriptor instead.
func (*AppVersionCreateRequest) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_version_proto_rawDescGZIP(), []int{5}
}

func (x *AppVersionCreateRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AppVersionCreateRequest) GetData() *AppVersionFormData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppVersionFormData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Version     string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	VersionNum  uint32 `protobuf:"varint,4,opt,name=version_num,json=versionNum,proto3" json:"version_num,omitempty"`
	Force       bool   `protobuf:"varint,5,opt,name=force,proto3" json:"force,omitempty"`
	Url         string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *AppVersionFormData) Reset() {
	*x = AppVersionFormData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_version_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionFormData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionFormData) ProtoMessage() {}

func (x *AppVersionFormData) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_version_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionFormData.ProtoReflect.Descriptor instead.
func (*AppVersionFormData) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_version_proto_rawDescGZIP(), []int{6}
}

func (x *AppVersionFormData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AppVersionFormData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AppVersionFormData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AppVersionFormData) GetVersionNum() uint32 {
	if x != nil {
		return x.VersionNum
	}
	return 0
}

func (x *AppVersionFormData) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *AppVersionFormData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type AppVersionUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId string                `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Data  *AppVersionUpdateData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AppVersionUpdateRequest) Reset() {
	*x = AppVersionUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_version_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionUpdateRequest) ProtoMessage() {}

func (x *AppVersionUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_version_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionUpdateRequest.ProtoReflect.Descriptor instead.
func (*AppVersionUpdateRequest) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_version_proto_rawDescGZIP(), []int{7}
}

func (x *AppVersionUpdateRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppVersionUpdateRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AppVersionUpdateRequest) GetData() *AppVersionUpdateData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppVersionUpdateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     *AppVersionFormData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Conflict *v1.Conflict        `protobuf:"bytes,2,opt,name=conflict,proto3" json:"conflict,omitempty"`
}

func (x *AppVersionUpdateData) Reset() {
	*x = AppVersionUpdateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_version_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionUpdateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionUpdateData) ProtoMessage() {}

func (x *AppVersionUpdateData) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_version_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionUpdateData.ProtoReflect.Descriptor instead.
func (*AppVersionUpdateData) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_version_proto_rawDescGZIP(), []int{8}
}

func (x *AppVersionUpdateData) GetData() *AppVersionFormData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AppVersionUpdateData) GetConflict() *v1.Conflict {
	if x != nil {
		return x.Conflict
	}
	return nil
}

type AppVersionDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *AppVersionDeleteRequest) Reset() {
	*x = AppVersionDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_version_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionDeleteRequest) ProtoMessage() {}

func (x *AppVersionDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_version_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionDeleteRequest.ProtoReflect.Descriptor instead.
func (*AppVersionDeleteRequest) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_version_proto_rawDescGZIP(), []int{9}
}

func (x *AppVersionDeleteRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppVersionDeleteRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type AppVersionPublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId string           `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Data  *v1.ConflictData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AppVersionPublishRequest) Reset() {
	*x = AppVersionPublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_version_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionPublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionPublishRequest) ProtoMessage() {}

func (x *AppVersionPublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_version_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionPublishRequest.ProtoReflect.Descriptor instead.
func (*AppVersionPublishRequest) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_version_proto_rawDescGZIP(), []int{10}
}

func (x *AppVersionPublishRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppVersionPublishRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AppVersionPublishRequest) GetData() *v1.ConflictData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_app_backend_api_app_v1_version_proto protoreflect.FileDescriptor

var file_app_backend_api_app_v1_version_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x61, 0x70,
	0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x62, 0x6a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x02, 0x0a, 0x19, 0x41, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x24, 0x92, 0x41, 0x18, 0x32, 0x16, 0x50, 0x61, 0x67, 0x65, 0x20,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2c, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x3d,
	0x31, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x28, 0x00, 0x40, 0x00, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x39, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x23, 0x92, 0x41, 0x17, 0x32, 0x15, 0x50, 0x61, 0x67, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2c,
	0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x3d, 0x31, 0x30, 0xfa, 0x42, 0x06, 0x2a, 0x04,
	0x28, 0x00, 0x40, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x56, 0x0a, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3c, 0x92, 0x41,
	0x39, 0x32, 0x37, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2c, 0x20, 0x6c, 0x69, 0x6b, 0x65, 0x3a, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x3d,
	0x78, 0x78, 0xef, 0xbc, 0x8c, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x3d, 0x69, 0x64, 0x3d,
	0x31, 0x7c, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x78, 0x78, 0x78, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x26, 0x92, 0x41, 0x23, 0x32, 0x21, 0x53, 0x6f, 0x72, 0x74, 0x20, 0x6c, 0x69, 0x73,
	0x74, 0x2c, 0x20, 0x6c, 0x69, 0x6b, 0x65, 0x3a, 0x20, 0x73, 0x6f, 0x72, 0x74, 0x3d, 0x2b, 0x61,
	0x2c, 0x2d, 0x62, 0x2c, 0x2b, 0x63, 0x2c, 0x2d, 0x64, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x36, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1f, 0x92, 0x41, 0x11, 0x32, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0xd2, 0x01, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x18, 0xd0, 0x01, 0x00,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x10,
	0x92, 0x41, 0x04, 0x32, 0x02, 0x69, 0x64, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x20, 0x00, 0x40, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x92, 0x41, 0x08, 0x32, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x18, 0xd0, 0x01, 0x00, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12,
	0x42, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x3a, 0x03, 0x80, 0x43, 0x01, 0x22, 0xb9, 0x02, 0x0a, 0x16, 0x41, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe6, 0xa0, 0x87, 0xe9, 0xa2, 0x98, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0xe7, 0x89,
	0x88, 0xe6, 0x9c, 0xac, 0xe5, 0x8f, 0xb7, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2d, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe5, 0xbc, 0xba, 0xe5,
	0x88, 0xb6, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12,
	0x4c, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9,
	0x97, 0xb4, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x50, 0x0a,
	0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x8f, 0x91, 0xe5, 0xb8, 0x83, 0xe6, 0x97, 0xb6, 0xe9,
	0x97, 0xb4, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x3a,
	0x03, 0x80, 0x43, 0x01, 0x22, 0xb8, 0x04, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x07, 0x92, 0x41, 0x04, 0x32, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08,
	0x32, 0x06, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x36, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe6, 0x9b, 0xb4, 0xe6, 0x96,
	0xb0, 0xe7, 0x9a, 0x84, 0xe5, 0x86, 0x85, 0xe5, 0xae, 0xb9, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0xe7,
	0x89, 0x88, 0xe6, 0x9c, 0xac, 0xe5, 0x8f, 0xb7, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x35, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe7, 0x89, 0x88,
	0xe6, 0x9c, 0xac, 0xe5, 0x8f, 0xb7, 0xe6, 0x95, 0xb0, 0xe5, 0x80, 0xbc, 0x52, 0x0a, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x2d, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe6, 0x98,
	0xaf, 0xe5, 0x90, 0xa6, 0xe5, 0xbc, 0xba, 0xe5, 0x88, 0xb6, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0,
	0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x96, 0x87, 0xe4, 0xbb,
	0xb6, 0xe8, 0xb7, 0xaf, 0xe5, 0xbe, 0x84, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x50, 0x0a, 0x0c,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x11,
	0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x8f, 0x91, 0xe5, 0xb8, 0x83, 0xe6, 0x97, 0xb6, 0xe9, 0x97,
	0xb4, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x56,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0b, 0x92, 0x41,
	0x08, 0x32, 0x06, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x52, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x42, 0x11, 0x92,
	0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x86, 0xb2, 0xe7, 0xaa, 0x81, 0xe6, 0xa3, 0x80, 0xe6, 0xb5, 0x8b,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x3a, 0x03, 0x80, 0x43, 0x01, 0x22,
	0xb6, 0x01, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x92, 0x41, 0x08,
	0x32, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x18,
	0xd0, 0x01, 0x00, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x6c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x2c, 0x92, 0x41, 0x21, 0x32, 0x18, 0xe5, 0x88, 0x9b, 0xe5, 0xbb,
	0xba, 0xe5, 0xba, 0x94, 0xe7, 0x94, 0xa8, 0xe7, 0x89, 0x88, 0xe6, 0x9c, 0xac, 0xe4, 0xbf, 0xa1,
	0xe6, 0x81, 0xaf, 0xd2, 0x01, 0x04, 0x64, 0x61, 0x74, 0x61, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdc, 0x02, 0x0a, 0x12, 0x41, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2d, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17,
	0x92, 0x41, 0x08, 0x32, 0x06, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0xfa, 0x42, 0x09, 0x72, 0x07,
	0x10, 0x01, 0x18, 0x64, 0xd0, 0x01, 0x00, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x40,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x9b, 0xb4, 0xe8, 0xa1, 0x8c,
	0xe5, 0x86, 0x85, 0xe5, 0xae, 0xb9, 0xfa, 0x42, 0x0a, 0x72, 0x08, 0x10, 0x00, 0x18, 0xff, 0x01,
	0xd0, 0x01, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x34, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1a, 0x92, 0x41, 0x0b, 0x32, 0x09, 0xe7, 0x89, 0x88, 0xe6, 0x9c, 0xac, 0xe5, 0x8f,
	0xb7, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x10, 0x05, 0x18, 0x14, 0xd0, 0x01, 0x00, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x1d, 0x92, 0x41, 0x11,
	0x32, 0x0f, 0xe7, 0x89, 0x88, 0xe6, 0x9c, 0xac, 0xe5, 0x8f, 0xb7, 0xe6, 0x95, 0xb0, 0xe5, 0x80,
	0xbc, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x20, 0x00, 0x40, 0x00, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x2d, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe6, 0x98, 0xaf, 0xe5,
	0x90, 0xa6, 0xe5, 0xbc, 0xba, 0xe5, 0x88, 0xb6, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0x52, 0x05,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x96, 0x87, 0xe4, 0xbb, 0xb6, 0xe8,
	0xb7, 0xaf, 0xe5, 0xbe, 0x84, 0xfa, 0x42, 0x0a, 0x72, 0x08, 0x10, 0x01, 0x18, 0xff, 0x01, 0xd0,
	0x01, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xcb, 0x01, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x15, 0x92, 0x41, 0x09, 0x32, 0x02, 0x69, 0x64, 0xd2, 0x01, 0x02, 0x69, 0x64, 0xfa, 0x42, 0x06,
	0x2a, 0x04, 0x20, 0x00, 0x40, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x92, 0x41, 0x08, 0x32,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x18, 0xd0,
	0x01, 0x00, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x18, 0x92, 0x41, 0x0d, 0x32, 0x04, 0x64, 0x61, 0x74, 0x61,
	0xd2, 0x01, 0x04, 0x64, 0x61, 0x74, 0x61, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe2, 0x01, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x63,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61,
	0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x46, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x42, 0x23, 0x92, 0x41, 0x18, 0x32, 0x0f, 0xe6,
	0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe7, 0x9a, 0x84, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xd2, 0x01,
	0x04, 0x64, 0x61, 0x74, 0x61, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x65, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x42, 0x24, 0x92, 0x41, 0x19, 0x32,
	0x0c, 0xe6, 0xa3, 0x80, 0xe6, 0xb5, 0x8b, 0xe5, 0x86, 0xb2, 0xe7, 0xaa, 0x81, 0xd2, 0x01, 0x08,
	0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x22, 0x73, 0x0a, 0x17, 0x41, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x19, 0x92, 0x41, 0x0d, 0x2a, 0x02, 0x49, 0x44, 0x32, 0x02, 0x49, 0x44, 0xd2, 0x01,
	0x02, 0x69, 0x64, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x20, 0x00, 0x40, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2d, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x16, 0x92, 0x41, 0x08, 0x32, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0xfa, 0x42, 0x08,
	0x72, 0x06, 0x98, 0x01, 0x18, 0xd0, 0x01, 0x00, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22,
	0xd1, 0x01, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x19, 0x92, 0x41, 0x0d, 0x2a, 0x02, 0x49,
	0x44, 0x32, 0x02, 0x49, 0x44, 0xd2, 0x01, 0x02, 0x69, 0x64, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x20,
	0x00, 0x40, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x92, 0x41, 0x08, 0x32, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x18, 0xd0, 0x01, 0x00, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x42, 0x1e, 0x92,
	0x41, 0x13, 0x2a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x04, 0x64, 0x61, 0x74, 0x61, 0xd2, 0x01,
	0x04, 0x64, 0x61, 0x74, 0x61, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x32, 0xa7, 0x0a, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xdc, 0x01, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x70, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x92,
	0x41, 0x3c, 0x12, 0x06, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x00, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x6a, 0x14, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x09, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xcd, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6e, 0x92, 0x41, 0x3c, 0x12, 0x06, 0xe8,
	0xaf, 0xa6, 0xe6, 0x83, 0x85, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x00, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x00, 0x6a, 0x14, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x09,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12,
	0x27, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xce, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x92, 0x41, 0x3c, 0x12, 0x06, 0xe5,
	0x88, 0x9b, 0xe5, 0xbb, 0xba, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x00, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x00, 0x6a, 0x14, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x09,
	0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xd3, 0x01, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x74, 0x92, 0x41, 0x3c, 0x12, 0x06,
	0xe4, 0xbf, 0xae, 0xe6, 0x94, 0xb9, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x00, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x00, 0x6a, 0x14, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x09, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f,
	0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0xc1, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x70,
	0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x6e, 0x92, 0x41, 0x3c, 0x12, 0x06, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4,
	0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x00, 0x0a, 0x0f, 0x0a,
	0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x6a, 0x14,
	0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x09, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x14, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x2a, 0x27, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0xe4, 0x01, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12,
	0x30, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x01, 0x92, 0x41, 0x3c, 0x12, 0x06, 0xe5, 0x8f, 0x91,
	0xe5, 0xb8, 0x83, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x00,
	0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x00, 0x6a, 0x14, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x09, 0x11, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x3a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x11, 0x92, 0x41, 0x0e, 0x12,
	0x0c, 0xe7, 0x89, 0x88, 0xe6, 0x9c, 0xac, 0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86, 0x42, 0xdb, 0x01,
	0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x62, 0x6e, 0x61, 0x68, 0x73, 0x67,
	0x6e, 0x61, 0x77, 0x2f, 0x61, 0x70, 0x70, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61,
	0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x70, 0x70, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x41,
	0x58, 0xaa, 0x02, 0x14, 0x41, 0x70, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x69, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x41, 0x70, 0x70, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x5c, 0x41, 0x70, 0x70, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x20, 0x41, 0x70, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x5c,
	0x41, 0x70, 0x70, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x16, 0x41, 0x70, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41,
	0x70, 0x69, 0x3a, 0x3a, 0x41, 0x70, 0x70, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_app_backend_api_app_v1_version_proto_rawDescOnce sync.Once
	file_app_backend_api_app_v1_version_proto_rawDescData = file_app_backend_api_app_v1_version_proto_rawDesc
)

func file_app_backend_api_app_v1_version_proto_rawDescGZIP() []byte {
	file_app_backend_api_app_v1_version_proto_rawDescOnce.Do(func() {
		file_app_backend_api_app_v1_version_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_backend_api_app_v1_version_proto_rawDescData)
	})
	return file_app_backend_api_app_v1_version_proto_rawDescData
}

var file_app_backend_api_app_v1_version_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_app_backend_api_app_v1_version_proto_goTypes = []interface{}{
	(*AppVersionPaginateRequest)(nil),  // 0: app_backend_api.app.v1.AppVersionPaginateRequest
	(*AppVersionDetailRequest)(nil),    // 1: app_backend_api.app.v1.AppVersionDetailRequest
	(*AppVersionPaginateResponse)(nil), // 2: app_backend_api.app.v1.AppVersionPaginateResponse
	(*AppVersionPaginateData)(nil),     // 3: app_backend_api.app.v1.AppVersionPaginateData
	(*AppVersion)(nil),                 // 4: app_backend_api.app.v1.AppVersion
	(*AppVersionCreateRequest)(nil),    // 5: app_backend_api.app.v1.AppVersionCreateRequest
	(*AppVersionFormData)(nil),         // 6: app_backend_api.app.v1.AppVersionFormData
	(*AppVersionUpdateRequest)(nil),    // 7: app_backend_api.app.v1.AppVersionUpdateRequest
	(*AppVersionUpdateData)(nil),       // 8: app_backend_api.app.v1.AppVersionUpdateData
	(*AppVersionDeleteRequest)(nil),    // 9: app_backend_api.app.v1.AppVersionDeleteRequest
	(*AppVersionPublishRequest)(nil),   // 10: app_backend_api.app.v1.AppVersionPublishRequest
	(*v1.PaginateMeta)(nil),            // 11: app_backend_api.common.v1.PaginateMeta
	(*timestamppb.Timestamp)(nil),      // 12: google.protobuf.Timestamp
	(*v1.OperateInfo)(nil),             // 13: app_backend_api.common.v1.OperateInfo
	(*v1.Conflict)(nil),                // 14: app_backend_api.common.v1.Conflict
	(*v1.ConflictData)(nil),            // 15: app_backend_api.common.v1.ConflictData
	(*emptypb.Empty)(nil),              // 16: google.protobuf.Empty
}
var file_app_backend_api_app_v1_version_proto_depIdxs = []int32{
	11, // 0: app_backend_api.app.v1.AppVersionPaginateResponse.meta:type_name -> app_backend_api.common.v1.PaginateMeta
	3,  // 1: app_backend_api.app.v1.AppVersionPaginateResponse.list:type_name -> app_backend_api.app.v1.AppVersionPaginateData
	12, // 2: app_backend_api.app.v1.AppVersionPaginateData.created_at:type_name -> google.protobuf.Timestamp
	12, // 3: app_backend_api.app.v1.AppVersionPaginateData.published_at:type_name -> google.protobuf.Timestamp
	12, // 4: app_backend_api.app.v1.AppVersion.published_at:type_name -> google.protobuf.Timestamp
	13, // 5: app_backend_api.app.v1.AppVersion.operate_info:type_name -> app_backend_api.common.v1.OperateInfo
	14, // 6: app_backend_api.app.v1.AppVersion.conflict:type_name -> app_backend_api.common.v1.Conflict
	6,  // 7: app_backend_api.app.v1.AppVersionCreateRequest.data:type_name -> app_backend_api.app.v1.AppVersionFormData
	8,  // 8: app_backend_api.app.v1.AppVersionUpdateRequest.data:type_name -> app_backend_api.app.v1.AppVersionUpdateData
	6,  // 9: app_backend_api.app.v1.AppVersionUpdateData.data:type_name -> app_backend_api.app.v1.AppVersionFormData
	14, // 10: app_backend_api.app.v1.AppVersionUpdateData.conflict:type_name -> app_backend_api.common.v1.Conflict
	15, // 11: app_backend_api.app.v1.AppVersionPublishRequest.data:type_name -> app_backend_api.common.v1.ConflictData
	0,  // 12: app_backend_api.app.v1.AppVersionService.Paginate:input_type -> app_backend_api.app.v1.AppVersionPaginateRequest
	1,  // 13: app_backend_api.app.v1.AppVersionService.Detail:input_type -> app_backend_api.app.v1.AppVersionDetailRequest
	5,  // 14: app_backend_api.app.v1.AppVersionService.Create:input_type -> app_backend_api.app.v1.AppVersionCreateRequest
	7,  // 15: app_backend_api.app.v1.AppVersionService.Update:input_type -> app_backend_api.app.v1.AppVersionUpdateRequest
	9,  // 16: app_backend_api.app.v1.AppVersionService.Delete:input_type -> app_backend_api.app.v1.AppVersionDeleteRequest
	10, // 17: app_backend_api.app.v1.AppVersionService.Publish:input_type -> app_backend_api.app.v1.AppVersionPublishRequest
	2,  // 18: app_backend_api.app.v1.AppVersionService.Paginate:output_type -> app_backend_api.app.v1.AppVersionPaginateResponse
	4,  // 19: app_backend_api.app.v1.AppVersionService.Detail:output_type -> app_backend_api.app.v1.AppVersion
	4,  // 20: app_backend_api.app.v1.AppVersionService.Create:output_type -> app_backend_api.app.v1.AppVersion
	4,  // 21: app_backend_api.app.v1.AppVersionService.Update:output_type -> app_backend_api.app.v1.AppVersion
	16, // 22: app_backend_api.app.v1.AppVersionService.Delete:output_type -> google.protobuf.Empty
	4,  // 23: app_backend_api.app.v1.AppVersionService.Publish:output_type -> app_backend_api.app.v1.AppVersion
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_app_backend_api_app_v1_version_proto_init() }
func file_app_backend_api_app_v1_version_proto_init() {
	if File_app_backend_api_app_v1_version_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_app_backend_api_app_v1_version_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionPaginateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_version_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_version_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionPaginateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_version_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionPaginateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_version_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_version_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_version_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionFormData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_version_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_version_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionUpdateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_version_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_version_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionPublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_backend_api_app_v1_version_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_backend_api_app_v1_version_proto_goTypes,
		DependencyIndexes: file_app_backend_api_app_v1_version_proto_depIdxs,
		MessageInfos:      file_app_backend_api_app_v1_version_proto_msgTypes,
	}.Build()
	File_app_backend_api_app_v1_version_proto = out.File
	file_app_backend_api_app_v1_version_proto_rawDesc = nil
	file_app_backend_api_app_v1_version_proto_goTypes = nil
	file_app_backend_api_app_v1_version_proto_depIdxs = nil
}
