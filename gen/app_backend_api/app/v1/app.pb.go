// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: app_backend_api/app/v1/app.proto

package appv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v1 "github.com/obnahsgnaw/appapi/gen/app_backend_api/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppType int32

const (
	AppType_Backend  AppType = 0
	AppType_Frontend AppType = 1
)

// Enum value maps for AppType.
var (
	AppType_name = map[int32]string{
		0: "Backend",
		1: "Frontend",
	}
	AppType_value = map[string]int32{
		"Backend":  0,
		"Frontend": 1,
	}
)

func (x AppType) Enum() *AppType {
	p := new(AppType)
	*p = x
	return p
}

func (x AppType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppType) Descriptor() protoreflect.EnumDescriptor {
	return file_app_backend_api_app_v1_app_proto_enumTypes[0].Descriptor()
}

func (AppType) Type() protoreflect.EnumType {
	return &file_app_backend_api_app_v1_app_proto_enumTypes[0]
}

func (x AppType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppType.Descriptor instead.
func (AppType) EnumDescriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_app_proto_rawDescGZIP(), []int{0}
}

type AppPaginateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *v1.PaginateMeta   `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	List []*AppPaginateDate `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AppPaginateResponse) Reset() {
	*x = AppPaginateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPaginateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPaginateResponse) ProtoMessage() {}

func (x *AppPaginateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPaginateResponse.ProtoReflect.Descriptor instead.
func (*AppPaginateResponse) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_app_proto_rawDescGZIP(), []int{0}
}

func (x *AppPaginateResponse) GetMeta() *v1.PaginateMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *AppPaginateResponse) GetList() []*AppPaginateDate {
	if x != nil {
		return x.List
	}
	return nil
}

type AppPaginateDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type      AppType                `protobuf:"varint,3,opt,name=type,proto3,enum=app_backend_api.app.v1.AppType" json:"type,omitempty"`
	Manage    bool                   `protobuf:"varint,4,opt,name=manage,proto3" json:"manage,omitempty"`
	Enabled   v1.EnableState         `protobuf:"varint,5,opt,name=enabled,proto3,enum=app_backend_api.common.v1.EnableState" json:"enabled,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *AppPaginateDate) Reset() {
	*x = AppPaginateDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPaginateDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPaginateDate) ProtoMessage() {}

func (x *AppPaginateDate) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPaginateDate.ProtoReflect.Descriptor instead.
func (*AppPaginateDate) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_app_proto_rawDescGZIP(), []int{1}
}

func (x *AppPaginateDate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppPaginateDate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppPaginateDate) GetType() AppType {
	if x != nil {
		return x.Type
	}
	return AppType_Backend
}

func (x *AppPaginateDate) GetManage() bool {
	if x != nil {
		return x.Manage
	}
	return false
}

func (x *AppPaginateDate) GetEnabled() v1.EnableState {
	if x != nil {
		return x.Enabled
	}
	return v1.EnableState(0)
}

func (x *AppPaginateDate) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type        AppType           `protobuf:"varint,3,opt,name=type,proto3,enum=app_backend_api.app.v1.AppType" json:"type,omitempty"`
	Description string            `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Scopes      string            `protobuf:"bytes,5,opt,name=scopes,proto3" json:"scopes,omitempty"`
	Package     string            `protobuf:"bytes,6,opt,name=package,proto3" json:"package,omitempty"`
	Project     string            `protobuf:"bytes,7,opt,name=project,proto3" json:"project,omitempty"`
	Manage      bool              `protobuf:"varint,8,opt,name=manage,proto3" json:"manage,omitempty"`
	Enabled     v1.EnableState    `protobuf:"varint,9,opt,name=enabled,proto3,enum=app_backend_api.common.v1.EnableState" json:"enabled,omitempty"`
	Attrs       map[string]string `protobuf:"bytes,10,rep,name=attrs,proto3" json:"attrs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	OperateInfo *v1.OperateInfo   `protobuf:"bytes,11,opt,name=operate_info,json=operateInfo,proto3" json:"operate_info,omitempty"`
	Conflict    *v1.Conflict      `protobuf:"bytes,12,opt,name=conflict,proto3" json:"conflict,omitempty"`
}

func (x *App) Reset() {
	*x = App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_app_proto_rawDescGZIP(), []int{2}
}

func (x *App) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *App) GetType() AppType {
	if x != nil {
		return x.Type
	}
	return AppType_Backend
}

func (x *App) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *App) GetScopes() string {
	if x != nil {
		return x.Scopes
	}
	return ""
}

func (x *App) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *App) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *App) GetManage() bool {
	if x != nil {
		return x.Manage
	}
	return false
}

func (x *App) GetEnabled() v1.EnableState {
	if x != nil {
		return x.Enabled
	}
	return v1.EnableState(0)
}

func (x *App) GetAttrs() map[string]string {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *App) GetOperateInfo() *v1.OperateInfo {
	if x != nil {
		return x.OperateInfo
	}
	return nil
}

func (x *App) GetConflict() *v1.Conflict {
	if x != nil {
		return x.Conflict
	}
	return nil
}

type AppCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *AppFormData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AppCreateRequest) Reset() {
	*x = AppCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCreateRequest) ProtoMessage() {}

func (x *AppCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCreateRequest.ProtoReflect.Descriptor instead.
func (*AppCreateRequest) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_app_proto_rawDescGZIP(), []int{3}
}

func (x *AppCreateRequest) GetData() *AppFormData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppFormData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Scopes      []string          `protobuf:"bytes,3,rep,name=scopes,proto3" json:"scopes,omitempty"`
	Type        AppType           `protobuf:"varint,4,opt,name=type,proto3,enum=app_backend_api.app.v1.AppType" json:"type,omitempty"`
	Package     string            `protobuf:"bytes,5,opt,name=package,proto3" json:"package,omitempty"`
	Project     string            `protobuf:"bytes,6,opt,name=project,proto3" json:"project,omitempty"`
	Manage      bool              `protobuf:"varint,7,opt,name=manage,proto3" json:"manage,omitempty"`
	Attrs       map[string]string `protobuf:"bytes,8,rep,name=attrs,proto3" json:"attrs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AppFormData) Reset() {
	*x = AppFormData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_app_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppFormData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppFormData) ProtoMessage() {}

func (x *AppFormData) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_app_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppFormData.ProtoReflect.Descriptor instead.
func (*AppFormData) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_app_proto_rawDescGZIP(), []int{4}
}

func (x *AppFormData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppFormData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AppFormData) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *AppFormData) GetType() AppType {
	if x != nil {
		return x.Type
	}
	return AppType_Backend
}

func (x *AppFormData) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *AppFormData) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *AppFormData) GetManage() bool {
	if x != nil {
		return x.Manage
	}
	return false
}

func (x *AppFormData) GetAttrs() map[string]string {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type AppUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *AppUpdateData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AppUpdateRequest) Reset() {
	*x = AppUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUpdateRequest) ProtoMessage() {}

func (x *AppUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUpdateRequest.ProtoReflect.Descriptor instead.
func (*AppUpdateRequest) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_app_proto_rawDescGZIP(), []int{5}
}

func (x *AppUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppUpdateRequest) GetData() *AppUpdateData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppUpdateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     *AppFormData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Conflict *v1.Conflict `protobuf:"bytes,2,opt,name=conflict,proto3" json:"conflict,omitempty"`
}

func (x *AppUpdateData) Reset() {
	*x = AppUpdateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUpdateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUpdateData) ProtoMessage() {}

func (x *AppUpdateData) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUpdateData.ProtoReflect.Descriptor instead.
func (*AppUpdateData) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_app_proto_rawDescGZIP(), []int{6}
}

func (x *AppUpdateData) GetData() *AppFormData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AppUpdateData) GetConflict() *v1.Conflict {
	if x != nil {
		return x.Conflict
	}
	return nil
}

type ConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_app_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_app_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_app_proto_rawDescGZIP(), []int{7}
}

type ConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ConfigItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ConfigResponse) Reset() {
	*x = ConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_app_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResponse) ProtoMessage() {}

func (x *ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_app_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResponse.ProtoReflect.Descriptor instead.
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_app_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigResponse) GetItems() []*ConfigItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ConfigItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc  string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *ConfigItem) Reset() {
	*x = ConfigItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_app_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigItem) ProtoMessage() {}

func (x *ConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_app_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigItem.ProtoReflect.Descriptor instead.
func (*ConfigItem) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_app_proto_rawDescGZIP(), []int{9}
}

func (x *ConfigItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ConfigItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type AppIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AppIdRequest) Reset() {
	*x = AppIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_app_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppIdRequest) ProtoMessage() {}

func (x *AppIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_app_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppIdRequest.ProtoReflect.Descriptor instead.
func (*AppIdRequest) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_app_proto_rawDescGZIP(), []int{10}
}

func (x *AppIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AppIdOperateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *v1.ConflictData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AppIdOperateRequest) Reset() {
	*x = AppIdOperateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_backend_api_app_v1_app_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppIdOperateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppIdOperateRequest) ProtoMessage() {}

func (x *AppIdOperateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_backend_api_app_v1_app_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppIdOperateRequest.ProtoReflect.Descriptor instead.
func (*AppIdOperateRequest) Descriptor() ([]byte, []int) {
	return file_app_backend_api_app_v1_app_proto_rawDescGZIP(), []int{11}
}

func (x *AppIdOperateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppIdOperateRequest) GetData() *v1.ConflictData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_app_backend_api_app_v1_app_proto protoreflect.FileDescriptor

var file_app_backend_api_app_v1_app_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x16, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x62, 0x6a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x70,
	0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x03, 0x80, 0x43, 0x01, 0x22, 0xf6, 0x02, 0x0a, 0x0f,
	0x41, 0x70, 0x70, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b,
	0x32, 0x09, 0xe5, 0xba, 0x94, 0xe7, 0x94, 0xa8, 0x20, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x25, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92,
	0x41, 0x0e, 0x32, 0x0c, 0xe5, 0xba, 0x94, 0xe7, 0x94, 0xa8, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe7, 0xb1, 0xbb, 0xe5,
	0x9e, 0x8b, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x32, 0x15, 0xe6,
	0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86, 0xe5, 0x9e, 0x8b, 0xe5, 0xba,
	0x94, 0xe7, 0x94, 0xa8, 0x52, 0x06, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x53, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x90, 0xaf, 0xe7,
	0x94, 0xa8, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x4c, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97,
	0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x3a,
	0x03, 0x80, 0x43, 0x01, 0x22, 0x84, 0x06, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x1b, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0x61,
	0x70, 0x70, 0x20, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0xba,
	0x94, 0xe7, 0x94, 0xa8, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0xba,
	0x94, 0xe7, 0x94, 0xa8, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe4, 0xbd,
	0x9c, 0xe7, 0x94, 0xa8, 0xe8, 0x8c, 0x83, 0xe5, 0x9b, 0xb4, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe5, 0x8c, 0x85, 0xe5, 0x90, 0x8d,
	0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32,
	0x0c, 0xe9, 0xa1, 0xb9, 0xe7, 0x9b, 0xae, 0xe6, 0xa0, 0x87, 0xe8, 0xaf, 0x86, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x32, 0x15, 0xe6, 0x98, 0xaf,
	0xe5, 0x90, 0xa6, 0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86, 0xe5, 0x9e, 0x8b, 0xe5, 0xba, 0x94, 0xe7,
	0x94, 0xa8, 0x52, 0x06, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x53, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x70,
	0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x90, 0xaf, 0xe7, 0x94, 0xa8,
	0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x4f, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0xba, 0x94,
	0xe7, 0x94, 0xa8, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73,
	0x12, 0x56, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0b,
	0x92, 0x41, 0x08, 0x32, 0x06, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x52, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66,
	0x6c, 0x69, 0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x70,
	0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x42,
	0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x86, 0xb2, 0xe7, 0xaa, 0x81, 0xe6, 0xa3, 0x80, 0xe6,
	0xb5, 0x8b, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x1a, 0x38, 0x0a, 0x0a,
	0x41, 0x74, 0x74, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x03, 0x80, 0x43, 0x01, 0x22, 0x65, 0x0a, 0x10, 0x41,
	0x70, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x51, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x18, 0x92, 0x41, 0x0d, 0x32, 0x04, 0x64, 0x61, 0x74, 0x61, 0xd2, 0x01, 0x04,
	0x64, 0x61, 0x74, 0x61, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xaa, 0x04, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x31, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x1d, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0xba, 0x94, 0xe7, 0x94, 0xa8, 0xe5, 0x90, 0x8d,
	0xe7, 0xa7, 0xb0, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x10, 0x01, 0x18, 0x64, 0xd0, 0x01, 0x00, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x0e, 0x32,
	0x0c, 0xe5, 0xba, 0x94, 0xe7, 0x94, 0xa8, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0xfa, 0x42, 0x0a,
	0x72, 0x08, 0x10, 0x00, 0x18, 0xff, 0x01, 0xd0, 0x01, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe4, 0xbd,
	0x9c, 0xe7, 0x94, 0xa8, 0xe8, 0x8c, 0x83, 0xe5, 0x9b, 0xb4, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x12, 0x48, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x13, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x07,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x92,
	0x41, 0x08, 0x32, 0x06, 0xe5, 0x8c, 0x85, 0xe5, 0x90, 0x8d, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x10,
	0x01, 0x18, 0x64, 0xd0, 0x01, 0x00, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12,
	0x37, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x1d, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0xa1, 0xb9, 0xe7, 0x9b, 0xae, 0xe6, 0xa0, 0x87,
	0xe8, 0xaf, 0x86, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x10, 0x01, 0x18, 0x64, 0xd0, 0x01, 0x00, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x32, 0x15, 0xe6,
	0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe7, 0xae, 0xa1, 0xe7, 0x90, 0x86, 0xe5, 0x9e, 0x8b, 0xe5, 0xba,
	0x94, 0xe7, 0x94, 0xa8, 0x52, 0x06, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x57, 0x0a, 0x05,
	0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70,
	0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x11, 0x92, 0x41, 0x0e,
	0x32, 0x0c, 0xe5, 0xba, 0x94, 0xe7, 0x94, 0xa8, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0x52, 0x05,
	0x61, 0x74, 0x74, 0x72, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x94, 0x01, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x1b, 0x92, 0x41, 0x0d, 0x32, 0x06, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x64, 0xd2, 0x01, 0x02,
	0x69, 0x64, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x18, 0xd0, 0x01, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x53, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x18, 0x92, 0x41, 0x0d, 0x32, 0x04, 0x64, 0x61, 0x74,
	0x61, 0xd2, 0x01, 0x04, 0x64, 0x61, 0x74, 0x61, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc9, 0x01, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x42, 0x18, 0x92, 0x41, 0x0d,
	0x32, 0x04, 0x64, 0x61, 0x74, 0x61, 0xd2, 0x01, 0x04, 0x64, 0x61, 0x74, 0x61, 0xfa, 0x42, 0x05,
	0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x65, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x42, 0x24, 0x92, 0x41, 0x19, 0x32, 0x0c, 0xe6, 0xa3, 0x80, 0xe6, 0xb5, 0x8b, 0xe5,
	0x86, 0xb2, 0xe7, 0xaa, 0x81, 0xd2, 0x01, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x1b, 0x92, 0x41, 0x10, 0x32, 0x06, 0xe5,
	0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0xd2, 0x01, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0xfa, 0x42, 0x05,
	0x92, 0x01, 0x02, 0x28, 0x01, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xab, 0x01, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2e, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0x92, 0x41, 0x11, 0x32, 0x09, 0xe5,
	0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0x6b, 0x65, 0x79, 0xd2, 0x01, 0x03, 0x6b, 0x65, 0x79, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0xd0, 0x01, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0x92, 0x41, 0x16, 0x32,
	0x0c, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0xe6, 0xa0, 0x87, 0xe9, 0xa2, 0x98, 0xd2, 0x01, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xd0, 0x01, 0x00, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x20, 0x92, 0x41, 0x15, 0x32, 0x0c, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0xe6,
	0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0xd2, 0x01, 0x04, 0x64, 0x65, 0x73, 0x63, 0xfa, 0x42, 0x05, 0x72,
	0x03, 0xd0, 0x01, 0x00, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x3b, 0x0a, 0x0c, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0x92, 0x41, 0x0d, 0x2a, 0x02, 0x49, 0x44, 0x32,
	0x02, 0x49, 0x44, 0xd2, 0x01, 0x02, 0x69, 0x64, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01, 0x18,
	0xd0, 0x01, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x49,
	0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0x92, 0x41, 0x0d,
	0x2a, 0x02, 0x49, 0x44, 0x32, 0x02, 0x49, 0x44, 0xd2, 0x01, 0x02, 0x69, 0x64, 0xfa, 0x42, 0x08,
	0x72, 0x06, 0x98, 0x01, 0x18, 0xd0, 0x01, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x70,
	0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x1e, 0x92, 0x41, 0x13, 0x2a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x04,
	0x64, 0x61, 0x74, 0x61, 0xd2, 0x01, 0x04, 0x64, 0x61, 0x74, 0x61, 0xfa, 0x42, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x24, 0x0a, 0x07, 0x41, 0x70, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x10, 0x01, 0x32,
	0xdf, 0x0b, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xbc,
	0x01, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x61, 0x70,
	0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x92, 0x41, 0x3c, 0x12, 0x06, 0xe5, 0x88, 0x97, 0xe8, 0xa1,
	0xa8, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x00, 0x0a, 0x0f,
	0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x6a,
	0x14, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x09, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xf0, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xa9, 0x01,
	0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x22, 0x5c, 0x92, 0x41, 0x3c,
	0x12, 0x06, 0xe8, 0xaf, 0xa6, 0xe6, 0x83, 0x85, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x00, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x6a, 0x14, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x09, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xae, 0x01, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x22, 0x5d, 0x92, 0x41, 0x3c,
	0x12, 0x06, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x00, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x6a, 0x14, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x09, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xb3, 0x01, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x22, 0x62, 0x92, 0x41,
	0x3c, 0x12, 0x06, 0xe4, 0xbf, 0xae, 0xe6, 0x94, 0xb9, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x00, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x6a, 0x14, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x09, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x40, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0xa4, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x61, 0x70,
	0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x5c, 0x92, 0x41, 0x3c, 0x12, 0x06,
	0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x00, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x00, 0x6a, 0x14, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x09, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x2a, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xc5, 0x01, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x49, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x22, 0x70, 0x92,
	0x41, 0x3c, 0x12, 0x06, 0xe7, 0xa6, 0x81, 0xe7, 0x94, 0xa8, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x00, 0x0a, 0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x6a, 0x14, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x09, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x40, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x23, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x2f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0xc3, 0x01, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x70,
	0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x22, 0x6f, 0x92, 0x41, 0x3c, 0x12, 0x06, 0xe5, 0x90, 0xaf, 0xe7, 0x94,
	0xa8, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x00, 0x0a, 0x0f,
	0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x6a,
	0x14, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x09, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x1c, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x2d,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0xb6, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x25, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5d, 0x92, 0x41, 0x42, 0x12, 0x0c, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0xe9, 0x85, 0x8d, 0xe7,
	0xbd, 0xae, 0x62, 0x1c, 0x0a, 0x09, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x00, 0x0a,
	0x0f, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00,
	0x6a, 0x14, 0x0a, 0x07, 0x78, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x09, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x20, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x11,
	0x92, 0x41, 0x0e, 0x12, 0x0c, 0xe5, 0xba, 0x94, 0xe7, 0x94, 0xa8, 0xe7, 0xae, 0xa1, 0xe7, 0x90,
	0x86, 0x42, 0xd7, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x42, 0x08, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x62, 0x6e, 0x61, 0x68, 0x73, 0x67,
	0x6e, 0x61, 0x77, 0x2f, 0x61, 0x70, 0x70, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61,
	0x70, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x70, 0x70, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x41,
	0x58, 0xaa, 0x02, 0x14, 0x41, 0x70, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x69, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x41, 0x70, 0x70, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x5c, 0x41, 0x70, 0x70, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x20, 0x41, 0x70, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x5c,
	0x41, 0x70, 0x70, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x16, 0x41, 0x70, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41,
	0x70, 0x69, 0x3a, 0x3a, 0x41, 0x70, 0x70, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_app_backend_api_app_v1_app_proto_rawDescOnce sync.Once
	file_app_backend_api_app_v1_app_proto_rawDescData = file_app_backend_api_app_v1_app_proto_rawDesc
)

func file_app_backend_api_app_v1_app_proto_rawDescGZIP() []byte {
	file_app_backend_api_app_v1_app_proto_rawDescOnce.Do(func() {
		file_app_backend_api_app_v1_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_backend_api_app_v1_app_proto_rawDescData)
	})
	return file_app_backend_api_app_v1_app_proto_rawDescData
}

var file_app_backend_api_app_v1_app_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_app_backend_api_app_v1_app_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_app_backend_api_app_v1_app_proto_goTypes = []interface{}{
	(AppType)(0),                  // 0: app_backend_api.app.v1.AppType
	(*AppPaginateResponse)(nil),   // 1: app_backend_api.app.v1.AppPaginateResponse
	(*AppPaginateDate)(nil),       // 2: app_backend_api.app.v1.AppPaginateDate
	(*App)(nil),                   // 3: app_backend_api.app.v1.App
	(*AppCreateRequest)(nil),      // 4: app_backend_api.app.v1.AppCreateRequest
	(*AppFormData)(nil),           // 5: app_backend_api.app.v1.AppFormData
	(*AppUpdateRequest)(nil),      // 6: app_backend_api.app.v1.AppUpdateRequest
	(*AppUpdateData)(nil),         // 7: app_backend_api.app.v1.AppUpdateData
	(*ConfigRequest)(nil),         // 8: app_backend_api.app.v1.ConfigRequest
	(*ConfigResponse)(nil),        // 9: app_backend_api.app.v1.ConfigResponse
	(*ConfigItem)(nil),            // 10: app_backend_api.app.v1.ConfigItem
	(*AppIdRequest)(nil),          // 11: app_backend_api.app.v1.AppIdRequest
	(*AppIdOperateRequest)(nil),   // 12: app_backend_api.app.v1.AppIdOperateRequest
	nil,                           // 13: app_backend_api.app.v1.App.AttrsEntry
	nil,                           // 14: app_backend_api.app.v1.AppFormData.AttrsEntry
	(*v1.PaginateMeta)(nil),       // 15: app_backend_api.common.v1.PaginateMeta
	(v1.EnableState)(0),           // 16: app_backend_api.common.v1.EnableState
	(*timestamppb.Timestamp)(nil), // 17: google.protobuf.Timestamp
	(*v1.OperateInfo)(nil),        // 18: app_backend_api.common.v1.OperateInfo
	(*v1.Conflict)(nil),           // 19: app_backend_api.common.v1.Conflict
	(*v1.ConflictData)(nil),       // 20: app_backend_api.common.v1.ConflictData
	(*v1.PaginateRequest)(nil),    // 21: app_backend_api.common.v1.PaginateRequest
	(*emptypb.Empty)(nil),         // 22: google.protobuf.Empty
}
var file_app_backend_api_app_v1_app_proto_depIdxs = []int32{
	15, // 0: app_backend_api.app.v1.AppPaginateResponse.meta:type_name -> app_backend_api.common.v1.PaginateMeta
	2,  // 1: app_backend_api.app.v1.AppPaginateResponse.list:type_name -> app_backend_api.app.v1.AppPaginateDate
	0,  // 2: app_backend_api.app.v1.AppPaginateDate.type:type_name -> app_backend_api.app.v1.AppType
	16, // 3: app_backend_api.app.v1.AppPaginateDate.enabled:type_name -> app_backend_api.common.v1.EnableState
	17, // 4: app_backend_api.app.v1.AppPaginateDate.created_at:type_name -> google.protobuf.Timestamp
	0,  // 5: app_backend_api.app.v1.App.type:type_name -> app_backend_api.app.v1.AppType
	16, // 6: app_backend_api.app.v1.App.enabled:type_name -> app_backend_api.common.v1.EnableState
	13, // 7: app_backend_api.app.v1.App.attrs:type_name -> app_backend_api.app.v1.App.AttrsEntry
	18, // 8: app_backend_api.app.v1.App.operate_info:type_name -> app_backend_api.common.v1.OperateInfo
	19, // 9: app_backend_api.app.v1.App.conflict:type_name -> app_backend_api.common.v1.Conflict
	5,  // 10: app_backend_api.app.v1.AppCreateRequest.data:type_name -> app_backend_api.app.v1.AppFormData
	0,  // 11: app_backend_api.app.v1.AppFormData.type:type_name -> app_backend_api.app.v1.AppType
	14, // 12: app_backend_api.app.v1.AppFormData.attrs:type_name -> app_backend_api.app.v1.AppFormData.AttrsEntry
	7,  // 13: app_backend_api.app.v1.AppUpdateRequest.data:type_name -> app_backend_api.app.v1.AppUpdateData
	5,  // 14: app_backend_api.app.v1.AppUpdateData.data:type_name -> app_backend_api.app.v1.AppFormData
	19, // 15: app_backend_api.app.v1.AppUpdateData.conflict:type_name -> app_backend_api.common.v1.Conflict
	10, // 16: app_backend_api.app.v1.ConfigResponse.items:type_name -> app_backend_api.app.v1.ConfigItem
	20, // 17: app_backend_api.app.v1.AppIdOperateRequest.data:type_name -> app_backend_api.common.v1.ConflictData
	21, // 18: app_backend_api.app.v1.AppService.Paginate:input_type -> app_backend_api.common.v1.PaginateRequest
	11, // 19: app_backend_api.app.v1.AppService.Detail:input_type -> app_backend_api.app.v1.AppIdRequest
	4,  // 20: app_backend_api.app.v1.AppService.Create:input_type -> app_backend_api.app.v1.AppCreateRequest
	6,  // 21: app_backend_api.app.v1.AppService.Update:input_type -> app_backend_api.app.v1.AppUpdateRequest
	11, // 22: app_backend_api.app.v1.AppService.Delete:input_type -> app_backend_api.app.v1.AppIdRequest
	12, // 23: app_backend_api.app.v1.AppService.Disable:input_type -> app_backend_api.app.v1.AppIdOperateRequest
	12, // 24: app_backend_api.app.v1.AppService.Enable:input_type -> app_backend_api.app.v1.AppIdOperateRequest
	8,  // 25: app_backend_api.app.v1.AppService.Config:input_type -> app_backend_api.app.v1.ConfigRequest
	1,  // 26: app_backend_api.app.v1.AppService.Paginate:output_type -> app_backend_api.app.v1.AppPaginateResponse
	3,  // 27: app_backend_api.app.v1.AppService.Detail:output_type -> app_backend_api.app.v1.App
	3,  // 28: app_backend_api.app.v1.AppService.Create:output_type -> app_backend_api.app.v1.App
	3,  // 29: app_backend_api.app.v1.AppService.Update:output_type -> app_backend_api.app.v1.App
	22, // 30: app_backend_api.app.v1.AppService.Delete:output_type -> google.protobuf.Empty
	3,  // 31: app_backend_api.app.v1.AppService.Disable:output_type -> app_backend_api.app.v1.App
	3,  // 32: app_backend_api.app.v1.AppService.Enable:output_type -> app_backend_api.app.v1.App
	9,  // 33: app_backend_api.app.v1.AppService.Config:output_type -> app_backend_api.app.v1.ConfigResponse
	26, // [26:34] is the sub-list for method output_type
	18, // [18:26] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_app_backend_api_app_v1_app_proto_init() }
func file_app_backend_api_app_v1_app_proto_init() {
	if File_app_backend_api_app_v1_app_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_app_backend_api_app_v1_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPaginateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPaginateDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_app_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_app_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppFormData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_app_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_app_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppUpdateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_app_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_app_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_app_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_app_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_backend_api_app_v1_app_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppIdOperateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_backend_api_app_v1_app_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_backend_api_app_v1_app_proto_goTypes,
		DependencyIndexes: file_app_backend_api_app_v1_app_proto_depIdxs,
		EnumInfos:         file_app_backend_api_app_v1_app_proto_enumTypes,
		MessageInfos:      file_app_backend_api_app_v1_app_proto_msgTypes,
	}.Build()
	File_app_backend_api_app_v1_app_proto = out.File
	file_app_backend_api_app_v1_app_proto_rawDesc = nil
	file_app_backend_api_app_v1_app_proto_goTypes = nil
	file_app_backend_api_app_v1_app_proto_depIdxs = nil
}
